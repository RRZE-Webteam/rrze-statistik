{"version":3,"file":"highchartsIndex.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AADA;AAgBA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AA5DA;AAkEA;;AAAA;AAEA;;;;;;;;;;;;AC7GA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNA","sources":["webpack://rrze-statistik/./src/highcharts/highcharts.js","webpack://rrze-statistik/./src/highcharts/highcharts-style.css?8e10","webpack://rrze-statistik/webpack/bootstrap","webpack://rrze-statistik/webpack/runtime/compat get default export","webpack://rrze-statistik/webpack/runtime/define property getters","webpack://rrze-statistik/webpack/runtime/hasOwnProperty shorthand","webpack://rrze-statistik/webpack/runtime/make namespace object","webpack://rrze-statistik/./src/highcharts/index.js"],"sourcesContent":["var linechartDataset;\nlet currentYear = new Date().getFullYear();\nconst { __, _x, _n, sprintf } = wp.i18n;\n/*\nDatenstruktur:\n0 {monat: \"3\", jahr: \"2020\", hits: \"222475\", files: \"188973\", hosts: \"2112\", …}\n...\n*/\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\nconsole.log(linechartDataset);\n  if (linechartDataset === undefined){\n    console.log(\"Data could not be retrieved\");\n    console.log(linechartDataset);\n  } else {\n    console.log(\"else\");\n    console.log(linechartDataset);\n  let filterData = (dataset, year) => {\n    let output = dataset.filter(data => {\n      return data.jahr === year.toString();\n    });\n    return output;\n  }\n\n  let outputThirdYear = filterData(linechartDataset, currentYear);\n  let outputSecondYear = filterData(linechartDataset, currentYear-1);\n  let outputFirstYear = filterData(linechartDataset, currentYear-2);\n\n  let generateDatasets = (dataset) => {\n    let datasetDummy = [null, null, null, null, null, null, null, null, null, null, null, null];\n    let datasetOutput = datasetDummy;\n    dataset.forEach(data => {\n      datasetOutput[parseInt(data.monat)-1] = parseInt(data.visits);\n    });\n    return datasetOutput;\n  }\n\n  let datasetFirstYear = generateDatasets(outputFirstYear);\n  let datasetSecondYear = generateDatasets(outputSecondYear);\n  let datasetThirdYear = generateDatasets(outputThirdYear);\n  \nHighcharts.chart('container', {\n    chart: {\n      type: 'areaspline'\n    },\n    title: {\n      text: 'Seitenbesucher der letzten 24 Monate'\n    },\n    legend: {\n      layout: 'vertical',\n      align: 'left',\n      verticalAlign: 'top',\n      x: 150,\n      y: 100,\n      floating: true,\n      borderWidth: 1,\n      backgroundColor:\n        Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\n    },\n    xAxis: {\n      categories: [\n        __('Jan', 'rrze-statistik'),\n        __('Feb', 'rrze-statistik'),\n        __('März', 'rrze-statistik'),\n        __('April', 'rrze-statistik'),\n        __('Mai', 'rrze-statistik'),\n        __('Juni', 'rrze-statistik'),\n        __('Juli', 'rrze-statistik'),\n        __('Aug', 'rrze-statistik'),\n        __('Sep', 'rrze-statistik'),\n        __('Okt', 'rrze-statistik'),\n        __('Nov', 'rrze-statistik'),\n        __('Dez', 'rrze-statistik'),      \n      ],\n    },\n    yAxis: {\n      title: {\n        text: __('Besucher', 'rrze-statistik')\n      }\n    },\n    tooltip: {\n      shared: true,\n      valueSuffix: __(' Besucher/Monat', 'rrze-statistik')\n    },\n    credits: {\n      enabled: false\n    },\n    plotOptions: {\n      areaspline: {\n        fillOpacity: 0.3\n      }\n    },\n    series: [\n      {\n      name: (currentYear-2).toString(),\n      data: datasetFirstYear\n    },\n      {\n      name: (currentYear-1).toString(),\n      data: datasetSecondYear\n    },\n             {\n      name: currentYear,\n      data: datasetThirdYear\n    }, \n            ]\n  });\n  };\n  \n});\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./highcharts-style.css\";\nimport \"./highcharts.js\";"],"names":[],"sourceRoot":""}