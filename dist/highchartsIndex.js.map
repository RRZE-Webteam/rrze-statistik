{"version":3,"file":"highchartsIndex.js","mappings":"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","sources":["webpack://rrze-statistik/./node_modules/memize/index.js","webpack://rrze-statistik/./node_modules/sprintf-js/src/sprintf.js","webpack://rrze-statistik/webpack/bootstrap","webpack://rrze-statistik/webpack/runtime/compat get default export","webpack://rrze-statistik/webpack/runtime/define property getters","webpack://rrze-statistik/webpack/runtime/hasOwnProperty shorthand","webpack://rrze-statistik/./node_modules/@wordpress/i18n/build-module/sprintf.js","webpack://rrze-statistik/./node_modules/@tannin/postfix/index.js","webpack://rrze-statistik/./node_modules/@tannin/evaluate/index.js","webpack://rrze-statistik/./node_modules/@tannin/compile/index.js","webpack://rrze-statistik/./node_modules/tannin/index.js","webpack://rrze-statistik/./node_modules/@tannin/plural-forms/index.js","webpack://rrze-statistik/./node_modules/@wordpress/i18n/build-module/create-i18n.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/validateNamespace.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/validateHookName.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createAddHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createRemoveHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createHasHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createRunHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createCurrentHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createDoingHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createDidHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createHooks.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/index.js","webpack://rrze-statistik/./node_modules/@wordpress/i18n/build-module/default-i18n.js","webpack://rrze-statistik/./src/highcharts/highcharts.js"],"sourcesContent":["/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {Function} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {F & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize( fn, options ) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized( /* ...args */ ) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs, i;\n\n\t\tsearchCache: while ( node ) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif ( node.args.length !== arguments.length ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( node.args[ i ] !== arguments[ i ] ) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== head ) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif ( node === tail ) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ ( node.prev ).next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ ( head ).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply( null, args ),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( head ) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif ( size === /** @type {MemizeOptions} */ ( options ).maxSize ) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ ( tail ).prev;\n\t\t\t/** @type {MemizeCacheNode} */ ( tail ).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function() {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\tif ( process.env.NODE_ENV === 'test' ) {\n\t\t// Cache is not exposed in the public API, but used in tests to ensure\n\t\t// expected list progression\n\t\tmemoized.getCache = function() {\n\t\t\treturn [ head, tail, size ];\n\t\t};\n\t}\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nmodule.exports = memize;\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport sprintfjs from 'sprintf-js';\n/**\n * Log to console, once per message; or more precisely, per referentially equal\n * argument set. Because Jed throws errors, we log these to the console instead\n * to avoid crashing the application.\n *\n * @param {...*} args Arguments to pass to `console.error`\n */\n\nconst logErrorOnce = memoize(console.error); // eslint-disable-line no-console\n\n/**\n * Returns a formatted string. If an error occurs in applying the format, the\n * original format string is returned.\n *\n * @param {string} format The format of the string to generate.\n * @param {...*}   args   Arguments to apply to the format.\n *\n * @see https://www.npmjs.com/package/sprintf-js\n *\n * @return {string} The formatted string.\n */\n\nexport function sprintf(format) {\n  try {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return sprintfjs.sprintf(format, ...args);\n  } catch (error) {\n    if (error instanceof Error) {\n      logErrorOnce('sprintf error: \\n\\n' + error.toString());\n    }\n\n    return format;\n  }\n}\n//# sourceMappingURL=sprintf.js.map","var PRECEDENCE, OPENERS, TERMINATORS, PATTERN;\n\n/**\n * Operator precedence mapping.\n *\n * @type {Object}\n */\nPRECEDENCE = {\n\t'(': 9,\n\t'!': 8,\n\t'*': 7,\n\t'/': 7,\n\t'%': 7,\n\t'+': 6,\n\t'-': 6,\n\t'<': 5,\n\t'<=': 5,\n\t'>': 5,\n\t'>=': 5,\n\t'==': 4,\n\t'!=': 4,\n\t'&&': 3,\n\t'||': 2,\n\t'?': 1,\n\t'?:': 1,\n};\n\n/**\n * Characters which signal pair opening, to be terminated by terminators.\n *\n * @type {string[]}\n */\nOPENERS = [ '(', '?' ];\n\n/**\n * Characters which signal pair termination, the value an array with the\n * opener as its first member. The second member is an optional operator\n * replacement to push to the stack.\n *\n * @type {string[]}\n */\nTERMINATORS = {\n\t')': [ '(' ],\n\t':': [ '?', '?:' ],\n};\n\n/**\n * Pattern matching operators and openers.\n *\n * @type {RegExp}\n */\nPATTERN = /<=|>=|==|!=|&&|\\|\\||\\?:|\\(|!|\\*|\\/|%|\\+|-|<|>|\\?|\\)|:/;\n\n/**\n * Given a C expression, returns the equivalent postfix (Reverse Polish)\n * notation terms as an array.\n *\n * If a postfix string is desired, simply `.join( ' ' )` the result.\n *\n * @example\n *\n * ```js\n * import postfix from '@tannin/postfix';\n *\n * postfix( 'n > 1' );\n * // ⇒ [ 'n', '1', '>' ]\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {string[]} Postfix terms.\n */\nexport default function postfix( expression ) {\n\tvar terms = [],\n\t\tstack = [],\n\t\tmatch, operator, term, element;\n\n\twhile ( ( match = expression.match( PATTERN ) ) ) {\n\t\toperator = match[ 0 ];\n\n\t\t// Term is the string preceding the operator match. It may contain\n\t\t// whitespace, and may be empty (if operator is at beginning).\n\t\tterm = expression.substr( 0, match.index ).trim();\n\t\tif ( term ) {\n\t\t\tterms.push( term );\n\t\t}\n\n\t\twhile ( ( element = stack.pop() ) ) {\n\t\t\tif ( TERMINATORS[ operator ] ) {\n\t\t\t\tif ( TERMINATORS[ operator ][ 0 ] === element ) {\n\t\t\t\t\t// Substitution works here under assumption that because\n\t\t\t\t\t// the assigned operator will no longer be a terminator, it\n\t\t\t\t\t// will be pushed to the stack during the condition below.\n\t\t\t\t\toperator = TERMINATORS[ operator ][ 1 ] || operator;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if ( OPENERS.indexOf( element ) >= 0 || PRECEDENCE[ element ] < PRECEDENCE[ operator ] ) {\n\t\t\t\t// Push to stack if either an opener or when pop reveals an\n\t\t\t\t// element of lower precedence.\n\t\t\t\tstack.push( element );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// For each popped from stack, push to terms.\n\t\t\tterms.push( element );\n\t\t}\n\n\t\tif ( ! TERMINATORS[ operator ] ) {\n\t\t\tstack.push( operator );\n\t\t}\n\n\t\t// Slice matched fragment from expression to continue match.\n\t\texpression = expression.substr( match.index + operator.length );\n\t}\n\n\t// Push remainder of operand, if exists, to terms.\n\texpression = expression.trim();\n\tif ( expression ) {\n\t\tterms.push( expression );\n\t}\n\n\t// Pop remaining items from stack into terms.\n\treturn terms.concat( stack.reverse() );\n}\n","/**\n * Operator callback functions.\n *\n * @type {Object}\n */\nvar OPERATORS = {\n\t'!': function( a ) {\n\t\treturn ! a;\n\t},\n\t'*': function( a, b ) {\n\t\treturn a * b;\n\t},\n\t'/': function( a, b ) {\n\t\treturn a / b;\n\t},\n\t'%': function( a, b ) {\n\t\treturn a % b;\n\t},\n\t'+': function( a, b ) {\n\t\treturn a + b;\n\t},\n\t'-': function( a, b ) {\n\t\treturn a - b;\n\t},\n\t'<': function( a, b ) {\n\t\treturn a < b;\n\t},\n\t'<=': function( a, b ) {\n\t\treturn a <= b;\n\t},\n\t'>': function( a, b ) {\n\t\treturn a > b;\n\t},\n\t'>=': function( a, b ) {\n\t\treturn a >= b;\n\t},\n\t'==': function( a, b ) {\n\t\treturn a === b;\n\t},\n\t'!=': function( a, b ) {\n\t\treturn a !== b;\n\t},\n\t'&&': function( a, b ) {\n\t\treturn a && b;\n\t},\n\t'||': function( a, b ) {\n\t\treturn a || b;\n\t},\n\t'?:': function( a, b, c ) {\n\t\tif ( a ) {\n\t\t\tthrow b;\n\t\t}\n\n\t\treturn c;\n\t},\n};\n\n/**\n * Given an array of postfix terms and operand variables, returns the result of\n * the postfix evaluation.\n *\n * @example\n *\n * ```js\n * import evaluate from '@tannin/evaluate';\n *\n * // 3 + 4 * 5 / 6 ⇒ '3 4 5 * 6 / +'\n * const terms = [ '3', '4', '5', '*', '6', '/', '+' ];\n *\n * evaluate( terms, {} );\n * // ⇒ 6.333333333333334\n * ```\n *\n * @param {string[]} postfix   Postfix terms.\n * @param {Object}   variables Operand variables.\n *\n * @return {*} Result of evaluation.\n */\nexport default function evaluate( postfix, variables ) {\n\tvar stack = [],\n\t\ti, j, args, getOperatorResult, term, value;\n\n\tfor ( i = 0; i < postfix.length; i++ ) {\n\t\tterm = postfix[ i ];\n\n\t\tgetOperatorResult = OPERATORS[ term ];\n\t\tif ( getOperatorResult ) {\n\t\t\t// Pop from stack by number of function arguments.\n\t\t\tj = getOperatorResult.length;\n\t\t\targs = Array( j );\n\t\t\twhile ( j-- ) {\n\t\t\t\targs[ j ] = stack.pop();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvalue = getOperatorResult.apply( null, args );\n\t\t\t} catch ( earlyReturn ) {\n\t\t\t\treturn earlyReturn;\n\t\t\t}\n\t\t} else if ( variables.hasOwnProperty( term ) ) {\n\t\t\tvalue = variables[ term ];\n\t\t} else {\n\t\t\tvalue = +term;\n\t\t}\n\n\t\tstack.push( value );\n\t}\n\n\treturn stack[ 0 ];\n}\n","import postfix from '@tannin/postfix';\nimport evaluate from '@tannin/evaluate';\n\n/**\n * Given a C expression, returns a function which can be called to evaluate its\n * result.\n *\n * @example\n *\n * ```js\n * import compile from '@tannin/compile';\n *\n * const evaluate = compile( 'n > 1' );\n *\n * evaluate( { n: 2 } );\n * // ⇒ true\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {(variables?:{[variable:string]:*})=>*} Compiled evaluator.\n */\nexport default function compile( expression ) {\n\tvar terms = postfix( expression );\n\n\treturn function( variables ) {\n\t\treturn evaluate( terms, variables );\n\t};\n}\n","import pluralForms from '@tannin/plural-forms';\n\n/**\n * Tannin constructor options.\n *\n * @typedef {Object} TanninOptions\n *\n * @property {string}   [contextDelimiter] Joiner in string lookup with context.\n * @property {Function} [onMissingKey]     Callback to invoke when key missing.\n */\n\n/**\n * Domain metadata.\n *\n * @typedef {Object} TanninDomainMetadata\n *\n * @property {string}            [domain]       Domain name.\n * @property {string}            [lang]         Language code.\n * @property {(string|Function)} [plural_forms] Plural forms expression or\n *                                              function evaluator.\n */\n\n/**\n * Domain translation pair respectively representing the singular and plural\n * translation.\n *\n * @typedef {[string,string]} TanninTranslation\n */\n\n/**\n * Locale data domain. The key is used as reference for lookup, the value an\n * array of two string entries respectively representing the singular and plural\n * translation.\n *\n * @typedef {{[key:string]:TanninDomainMetadata|TanninTranslation,'':TanninDomainMetadata|TanninTranslation}} TanninLocaleDomain\n */\n\n/**\n * Jed-formatted locale data.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @typedef {{[domain:string]:TanninLocaleDomain}} TanninLocaleData\n */\n\n/**\n * Default Tannin constructor options.\n *\n * @type {TanninOptions}\n */\nvar DEFAULT_OPTIONS = {\n\tcontextDelimiter: '\\u0004',\n\tonMissingKey: null,\n};\n\n/**\n * Given a specific locale data's config `plural_forms` value, returns the\n * expression.\n *\n * @example\n *\n * ```\n * getPluralExpression( 'nplurals=2; plural=(n != 1);' ) === '(n != 1)'\n * ```\n *\n * @param {string} pf Locale data plural forms.\n *\n * @return {string} Plural forms expression.\n */\nfunction getPluralExpression( pf ) {\n\tvar parts, i, part;\n\n\tparts = pf.split( ';' );\n\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tpart = parts[ i ].trim();\n\t\tif ( part.indexOf( 'plural=' ) === 0 ) {\n\t\t\treturn part.substr( 7 );\n\t\t}\n\t}\n}\n\n/**\n * Tannin constructor.\n *\n * @class\n *\n * @param {TanninLocaleData} data      Jed-formatted locale data.\n * @param {TanninOptions}    [options] Tannin options.\n */\nexport default function Tannin( data, options ) {\n\tvar key;\n\n\t/**\n\t * Jed-formatted locale data.\n\t *\n\t * @name Tannin#data\n\t * @type {TanninLocaleData}\n\t */\n\tthis.data = data;\n\n\t/**\n\t * Plural forms function cache, keyed by plural forms string.\n\t *\n\t * @name Tannin#pluralForms\n\t * @type {Object<string,Function>}\n\t */\n\tthis.pluralForms = {};\n\n\t/**\n\t * Effective options for instance, including defaults.\n\t *\n\t * @name Tannin#options\n\t * @type {TanninOptions}\n\t */\n\tthis.options = {};\n\n\tfor ( key in DEFAULT_OPTIONS ) {\n\t\tthis.options[ key ] = options !== undefined && key in options\n\t\t\t? options[ key ]\n\t\t\t: DEFAULT_OPTIONS[ key ];\n\t}\n}\n\n/**\n * Returns the plural form index for the given domain and value.\n *\n * @param {string} domain Domain on which to calculate plural form.\n * @param {number} n      Value for which plural form is to be calculated.\n *\n * @return {number} Plural form index.\n */\nTannin.prototype.getPluralForm = function( domain, n ) {\n\tvar getPluralForm = this.pluralForms[ domain ],\n\t\tconfig, plural, pf;\n\n\tif ( ! getPluralForm ) {\n\t\tconfig = this.data[ domain ][ '' ];\n\n\t\tpf = (\n\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t// @ts-ignore\n\t\t\tconfig.plural_forms\n\t\t);\n\n\t\tif ( typeof pf !== 'function' ) {\n\t\t\tplural = getPluralExpression(\n\t\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t\t// @ts-ignore\n\t\t\t\tconfig.plural_forms\n\t\t\t);\n\n\t\t\tpf = pluralForms( plural );\n\t\t}\n\n\t\tgetPluralForm = this.pluralForms[ domain ] = pf;\n\t}\n\n\treturn getPluralForm( n );\n};\n\n/**\n * Translate a string.\n *\n * @param {string}      domain   Translation domain.\n * @param {string|void} context  Context distinguishing terms of the same name.\n * @param {string}      singular Primary key for translation lookup.\n * @param {string=}     plural   Fallback value used for non-zero plural\n *                               form index.\n * @param {number=}     n        Value to use in calculating plural form.\n *\n * @return {string} Translated string.\n */\nTannin.prototype.dcnpgettext = function( domain, context, singular, plural, n ) {\n\tvar index, key, entry;\n\n\tif ( n === undefined ) {\n\t\t// Default to singular.\n\t\tindex = 0;\n\t} else {\n\t\t// Find index by evaluating plural form for value.\n\t\tindex = this.getPluralForm( domain, n );\n\t}\n\n\tkey = singular;\n\n\t// If provided, context is prepended to key with delimiter.\n\tif ( context ) {\n\t\tkey = context + this.options.contextDelimiter + singular;\n\t}\n\n\tentry = this.data[ domain ][ key ];\n\n\t// Verify not only that entry exists, but that the intended index is within\n\t// range and non-empty.\n\tif ( entry && entry[ index ] ) {\n\t\treturn entry[ index ];\n\t}\n\n\tif ( this.options.onMissingKey ) {\n\t\tthis.options.onMissingKey( singular, domain );\n\t}\n\n\t// If entry not found, fall back to singular vs. plural with zero index\n\t// representing the singular value.\n\treturn index === 0 ? singular : plural;\n};\n","import compile from '@tannin/compile';\n\n/**\n * Given a C expression, returns a function which, when called with a value,\n * evaluates the result with the value assumed to be the \"n\" variable of the\n * expression. The result will be coerced to its numeric equivalent.\n *\n * @param {string} expression C expression.\n *\n * @return {Function} Evaluator function.\n */\nexport default function pluralForms( expression ) {\n\tvar evaluate = compile( expression );\n\n\treturn function( n ) {\n\t\treturn +evaluate( { n: n } );\n\t};\n}\n","/**\n * External dependencies\n */\nimport Tannin from 'tannin';\n/**\n * @typedef {Record<string,any>} LocaleData\n */\n\n/**\n * Default locale data to use for Tannin domain when not otherwise provided.\n * Assumes an English plural forms expression.\n *\n * @type {LocaleData}\n */\n\nconst DEFAULT_LOCALE_DATA = {\n  '': {\n    /** @param {number} n */\n    plural_forms(n) {\n      return n === 1 ? 0 : 1;\n    }\n\n  }\n};\n/*\n * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,\n * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.\n */\n\nconst I18N_HOOK_REGEXP = /^i18n\\.(n?gettext|has_translation)(_|$)/;\n/**\n * @typedef {(domain?: string) => LocaleData} GetLocaleData\n *\n * Returns locale data by domain in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will overwrite the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} AddLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will also merge the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData\n *\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/** @typedef {() => void} SubscribeCallback */\n\n/** @typedef {() => void} UnsubscribeCallback */\n\n/**\n * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe\n *\n * Subscribes to changes of locale data\n */\n\n/**\n * @typedef {(domain?: string) => string} GetFilterDomain\n * Retrieve the domain to use when calling domain-specific filters.\n */\n\n/**\n * @typedef {(text: string, domain?: string) => string} __\n *\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n */\n\n/**\n * @typedef {(text: string, context: string, domain?: string) => string} _x\n *\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n */\n\n/**\n * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n */\n\n/**\n * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n */\n\n/**\n * @typedef {() => boolean} IsRtl\n *\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n */\n\n/**\n * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation\n *\n * Check if there is a translation for a given string in singular form.\n */\n\n/** @typedef {import('@wordpress/hooks').Hooks} Hooks */\n\n/**\n * An i18n instance\n *\n * @typedef I18n\n * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.\n * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will overwrite the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {AddLocaleData}   addLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will also merge the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified\n *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.\n * @property {__}              __              Retrieve the translation of text.\n * @property {_x}              _x              Retrieve translated string with gettext context.\n * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied\n *                                             number.\n * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied\n *                                             number, with gettext context.\n * @property {IsRtl}           isRTL           Check if current locale is RTL.\n * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.\n */\n\n/**\n * Create an i18n instance\n *\n * @param {LocaleData} [initialData]   Locale data configuration.\n * @param {string}     [initialDomain] Domain for which configuration applies.\n * @param {Hooks}      [hooks]         Hooks implementation.\n *\n * @return {I18n} I18n instance.\n */\n\nexport const createI18n = (initialData, initialDomain, hooks) => {\n  /**\n   * The underlying instance of Tannin to which exported functions interface.\n   *\n   * @type {Tannin}\n   */\n  const tannin = new Tannin({});\n  const listeners = new Set();\n\n  const notifyListeners = () => {\n    listeners.forEach(listener => listener());\n  };\n  /**\n   * Subscribe to changes of locale data.\n   *\n   * @param {SubscribeCallback} callback Subscription callback.\n   * @return {UnsubscribeCallback} Unsubscribe callback.\n   */\n\n\n  const subscribe = callback => {\n    listeners.add(callback);\n    return () => listeners.delete(callback);\n  };\n  /** @type {GetLocaleData} */\n\n\n  const getLocaleData = function () {\n    let domain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    return tannin.data[domain];\n  };\n  /**\n   * @param {LocaleData} [data]\n   * @param {string}     [domain]\n   */\n\n\n  const doSetLocaleData = function (data) {\n    var _tannin$data$domain;\n\n    let domain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    tannin.data[domain] = { ...tannin.data[domain],\n      ...data\n    }; // Populate default domain configuration (supported locale date which omits\n    // a plural forms expression).\n\n    tannin.data[domain][''] = { ...DEFAULT_LOCALE_DATA[''],\n      ...((_tannin$data$domain = tannin.data[domain]) === null || _tannin$data$domain === void 0 ? void 0 : _tannin$data$domain[''])\n    }; // Clean up cached plural forms functions cache as it might be updated.\n\n    delete tannin.pluralForms[domain];\n  };\n  /** @type {SetLocaleData} */\n\n\n  const setLocaleData = (data, domain) => {\n    doSetLocaleData(data, domain);\n    notifyListeners();\n  };\n  /** @type {AddLocaleData} */\n\n\n  const addLocaleData = function (data) {\n    var _tannin$data$domain2;\n\n    let domain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    tannin.data[domain] = { ...tannin.data[domain],\n      ...data,\n      // Populate default domain configuration (supported locale date which omits\n      // a plural forms expression).\n      '': { ...DEFAULT_LOCALE_DATA[''],\n        ...((_tannin$data$domain2 = tannin.data[domain]) === null || _tannin$data$domain2 === void 0 ? void 0 : _tannin$data$domain2['']),\n        ...(data === null || data === void 0 ? void 0 : data[''])\n      }\n    }; // Clean up cached plural forms functions cache as it might be updated.\n\n    delete tannin.pluralForms[domain];\n    notifyListeners();\n  };\n  /** @type {ResetLocaleData} */\n\n\n  const resetLocaleData = (data, domain) => {\n    // Reset all current Tannin locale data.\n    tannin.data = {}; // Reset cached plural forms functions cache.\n\n    tannin.pluralForms = {};\n    setLocaleData(data, domain);\n  };\n  /**\n   * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not\n   * otherwise previously assigned.\n   *\n   * @param {string|undefined} domain   Domain to retrieve the translated text.\n   * @param {string|undefined} context  Context information for the translators.\n   * @param {string}           single   Text to translate if non-plural. Used as\n   *                                    fallback return value on a caught error.\n   * @param {string}           [plural] The text to be used if the number is\n   *                                    plural.\n   * @param {number}           [number] The number to compare against to use\n   *                                    either the singular or plural form.\n   *\n   * @return {string} The translated string.\n   */\n\n\n  const dcnpgettext = function () {\n    let domain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    let context = arguments.length > 1 ? arguments[1] : undefined;\n    let single = arguments.length > 2 ? arguments[2] : undefined;\n    let plural = arguments.length > 3 ? arguments[3] : undefined;\n    let number = arguments.length > 4 ? arguments[4] : undefined;\n\n    if (!tannin.data[domain]) {\n      // use `doSetLocaleData` to set silently, without notifying listeners\n      doSetLocaleData(undefined, domain);\n    }\n\n    return tannin.dcnpgettext(domain, context, single, plural, number);\n  };\n  /** @type {GetFilterDomain} */\n\n\n  const getFilterDomain = function () {\n    let domain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    return domain;\n  };\n  /** @type {__} */\n\n\n  const __ = (text, domain) => {\n    let translation = dcnpgettext(domain, undefined, text);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters text with its translation.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} text        Text to translate.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.gettext', translation, text, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.gettext_' + getFilterDomain(domain), translation, text, domain)\n    );\n  };\n  /** @type {_x} */\n\n\n  const _x = (text, context, domain) => {\n    let translation = dcnpgettext(domain, context, text);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters text with its translation based on context information.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} text        Text to translate.\n     * @param {string} context     Context information for the translators.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.gettext_with_context', translation, text, context, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.gettext_with_context_' + getFilterDomain(domain), translation, text, context, domain)\n    );\n  };\n  /** @type {_n} */\n\n\n  const _n = (single, plural, number, domain) => {\n    let translation = dcnpgettext(domain, undefined, single, plural, number);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters the singular or plural form of a string.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} single      The text to be used if the number is singular.\n     * @param {string} plural      The text to be used if the number is plural.\n     * @param {string} number      The number to compare against to use either the singular or plural form.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.ngettext', translation, single, plural, number, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.ngettext_' + getFilterDomain(domain), translation, single, plural, number, domain)\n    );\n  };\n  /** @type {_nx} */\n\n\n  const _nx = (single, plural, number, context, domain) => {\n    let translation = dcnpgettext(domain, context, single, plural, number);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters the singular or plural form of a string with gettext context.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} single      The text to be used if the number is singular.\n     * @param {string} plural      The text to be used if the number is plural.\n     * @param {string} number      The number to compare against to use either the singular or plural form.\n     * @param {string} context     Context information for the translators.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.ngettext_with_context', translation, single, plural, number, context, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.ngettext_with_context_' + getFilterDomain(domain), translation, single, plural, number, context, domain)\n    );\n  };\n  /** @type {IsRtl} */\n\n\n  const isRTL = () => {\n    return 'rtl' === _x('ltr', 'text direction');\n  };\n  /** @type {HasTranslation} */\n\n\n  const hasTranslation = (single, context, domain) => {\n    var _tannin$data, _tannin$data2;\n\n    const key = context ? context + '\\u0004' + single : single;\n    let result = !!((_tannin$data = tannin.data) !== null && _tannin$data !== void 0 && (_tannin$data2 = _tannin$data[domain !== null && domain !== void 0 ? domain : 'default']) !== null && _tannin$data2 !== void 0 && _tannin$data2[key]);\n\n    if (hooks) {\n      /**\n       * Filters the presence of a translation in the locale data.\n       *\n       * @param {boolean} hasTranslation Whether the translation is present or not..\n       * @param {string}  single         The singular form of the translated text (used as key in locale data)\n       * @param {string}  context        Context information for the translators.\n       * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.\n       */\n      result =\n      /** @type { boolean } */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.has_translation', result, single, context, domain);\n      result =\n      /** @type { boolean } */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.has_translation_' + getFilterDomain(domain), result, single, context, domain);\n    }\n\n    return result;\n  };\n\n  if (initialData) {\n    setLocaleData(initialData, initialDomain);\n  }\n\n  if (hooks) {\n    /**\n     * @param {string} hookName\n     */\n    const onHookAddedOrRemoved = hookName => {\n      if (I18N_HOOK_REGEXP.test(hookName)) {\n        notifyListeners();\n      }\n    };\n\n    hooks.addAction('hookAdded', 'core/i18n', onHookAddedOrRemoved);\n    hooks.addAction('hookRemoved', 'core/i18n', onHookAddedOrRemoved);\n  }\n\n  return {\n    getLocaleData,\n    setLocaleData,\n    addLocaleData,\n    resetLocaleData,\n    subscribe,\n    __,\n    _x,\n    _n,\n    _nx,\n    isRTL,\n    hasTranslation\n  };\n};\n//# sourceMappingURL=create-i18n.js.map","/**\n * Validate a namespace string.\n *\n * @param {string} namespace The namespace to validate - should take the form\n *                           `vendor/plugin/function`.\n *\n * @return {boolean} Whether the namespace is valid.\n */\nfunction validateNamespace(namespace) {\n  if ('string' !== typeof namespace || '' === namespace) {\n    // eslint-disable-next-line no-console\n    console.error('The namespace must be a non-empty string.');\n    return false;\n  }\n\n  if (!/^[a-zA-Z][a-zA-Z0-9_.\\-\\/]*$/.test(namespace)) {\n    // eslint-disable-next-line no-console\n    console.error('The namespace can only contain numbers, letters, dashes, periods, underscores and slashes.');\n    return false;\n  }\n\n  return true;\n}\n\nexport default validateNamespace;\n//# sourceMappingURL=validateNamespace.js.map","/**\n * Validate a hookName string.\n *\n * @param {string} hookName The hook name to validate. Should be a non empty string containing\n *                          only numbers, letters, dashes, periods and underscores. Also,\n *                          the hook name cannot begin with `__`.\n *\n * @return {boolean} Whether the hook name is valid.\n */\nfunction validateHookName(hookName) {\n  if ('string' !== typeof hookName || '' === hookName) {\n    // eslint-disable-next-line no-console\n    console.error('The hook name must be a non-empty string.');\n    return false;\n  }\n\n  if (/^__/.test(hookName)) {\n    // eslint-disable-next-line no-console\n    console.error('The hook name cannot begin with `__`.');\n    return false;\n  }\n\n  if (!/^[a-zA-Z][a-zA-Z0-9_.-]*$/.test(hookName)) {\n    // eslint-disable-next-line no-console\n    console.error('The hook name can only contain numbers, letters, dashes, periods and underscores.');\n    return false;\n  }\n\n  return true;\n}\n\nexport default validateHookName;\n//# sourceMappingURL=validateHookName.js.map","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n/**\n * @callback AddHook\n *\n * Adds the hook to the appropriate hooks container.\n *\n * @param {string}               hookName      Name of hook to add\n * @param {string}               namespace     The unique namespace identifying the callback in the form `vendor/plugin/function`.\n * @param {import('.').Callback} callback      Function to call when the hook is run\n * @param {number}               [priority=10] Priority of this hook\n */\n\n/**\n * Returns a function which, when invoked, will add a hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {AddHook} Function that adds a new hook.\n */\n\nfunction createAddHook(hooks, storeKey) {\n  return function addHook(hookName, namespace, callback) {\n    let priority = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n    const hooksStore = hooks[storeKey];\n\n    if (!validateHookName(hookName)) {\n      return;\n    }\n\n    if (!validateNamespace(namespace)) {\n      return;\n    }\n\n    if ('function' !== typeof callback) {\n      // eslint-disable-next-line no-console\n      console.error('The hook callback must be a function.');\n      return;\n    } // Validate numeric priority\n\n\n    if ('number' !== typeof priority) {\n      // eslint-disable-next-line no-console\n      console.error('If specified, the hook priority must be a number.');\n      return;\n    }\n\n    const handler = {\n      callback,\n      priority,\n      namespace\n    };\n\n    if (hooksStore[hookName]) {\n      // Find the correct insert index of the new hook.\n      const handlers = hooksStore[hookName].handlers;\n      /** @type {number} */\n\n      let i;\n\n      for (i = handlers.length; i > 0; i--) {\n        if (priority >= handlers[i - 1].priority) {\n          break;\n        }\n      }\n\n      if (i === handlers.length) {\n        // If append, operate via direct assignment.\n        handlers[i] = handler;\n      } else {\n        // Otherwise, insert before index via splice.\n        handlers.splice(i, 0, handler);\n      } // We may also be currently executing this hook.  If the callback\n      // we're adding would come after the current callback, there's no\n      // problem; otherwise we need to increase the execution index of\n      // any other runs by 1 to account for the added element.\n\n\n      hooksStore.__current.forEach(hookInfo => {\n        if (hookInfo.name === hookName && hookInfo.currentIndex >= i) {\n          hookInfo.currentIndex++;\n        }\n      });\n    } else {\n      // This is the first hook of its type.\n      hooksStore[hookName] = {\n        handlers: [handler],\n        runs: 0\n      };\n    }\n\n    if (hookName !== 'hookAdded') {\n      hooks.doAction('hookAdded', hookName, namespace, callback, priority);\n    }\n  };\n}\n\nexport default createAddHook;\n//# sourceMappingURL=createAddHook.js.map","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n/**\n * @callback RemoveHook\n * Removes the specified callback (or all callbacks) from the hook with a given hookName\n * and namespace.\n *\n * @param {string} hookName  The name of the hook to modify.\n * @param {string} namespace The unique namespace identifying the callback in the\n *                           form `vendor/plugin/function`.\n *\n * @return {number | undefined} The number of callbacks removed.\n */\n\n/**\n * Returns a function which, when invoked, will remove a specified hook or all\n * hooks by the given name.\n *\n * @param {import('.').Hooks}    hooks             Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [removeAll=false] Whether to remove all callbacks for a hookName,\n *                                                 without regard to namespace. Used to create\n *                                                 `removeAll*` functions.\n *\n * @return {RemoveHook} Function that removes hooks.\n */\n\nfunction createRemoveHook(hooks, storeKey) {\n  let removeAll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return function removeHook(hookName, namespace) {\n    const hooksStore = hooks[storeKey];\n\n    if (!validateHookName(hookName)) {\n      return;\n    }\n\n    if (!removeAll && !validateNamespace(namespace)) {\n      return;\n    } // Bail if no hooks exist by this name\n\n\n    if (!hooksStore[hookName]) {\n      return 0;\n    }\n\n    let handlersRemoved = 0;\n\n    if (removeAll) {\n      handlersRemoved = hooksStore[hookName].handlers.length;\n      hooksStore[hookName] = {\n        runs: hooksStore[hookName].runs,\n        handlers: []\n      };\n    } else {\n      // Try to find the specified callback to remove.\n      const handlers = hooksStore[hookName].handlers;\n\n      for (let i = handlers.length - 1; i >= 0; i--) {\n        if (handlers[i].namespace === namespace) {\n          handlers.splice(i, 1);\n          handlersRemoved++; // This callback may also be part of a hook that is\n          // currently executing.  If the callback we're removing\n          // comes after the current callback, there's no problem;\n          // otherwise we need to decrease the execution index of any\n          // other runs by 1 to account for the removed element.\n\n          hooksStore.__current.forEach(hookInfo => {\n            if (hookInfo.name === hookName && hookInfo.currentIndex >= i) {\n              hookInfo.currentIndex--;\n            }\n          });\n        }\n      }\n    }\n\n    if (hookName !== 'hookRemoved') {\n      hooks.doAction('hookRemoved', hookName, namespace);\n    }\n\n    return handlersRemoved;\n  };\n}\n\nexport default createRemoveHook;\n//# sourceMappingURL=createRemoveHook.js.map","/**\n * @callback HasHook\n *\n * Returns whether any handlers are attached for the given hookName and optional namespace.\n *\n * @param {string} hookName    The name of the hook to check for.\n * @param {string} [namespace] Optional. The unique namespace identifying the callback\n *                             in the form `vendor/plugin/function`.\n *\n * @return {boolean} Whether there are handlers that are attached to the given hook.\n */\n\n/**\n * Returns a function which, when invoked, will return whether any handlers are\n * attached to a particular hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {HasHook} Function that returns whether any handlers are\n *                   attached to a particular hook and optional namespace.\n */\nfunction createHasHook(hooks, storeKey) {\n  return function hasHook(hookName, namespace) {\n    const hooksStore = hooks[storeKey]; // Use the namespace if provided.\n\n    if ('undefined' !== typeof namespace) {\n      return hookName in hooksStore && hooksStore[hookName].handlers.some(hook => hook.namespace === namespace);\n    }\n\n    return hookName in hooksStore;\n  };\n}\n\nexport default createHasHook;\n//# sourceMappingURL=createHasHook.js.map","/**\n * Returns a function which, when invoked, will execute all callbacks\n * registered to a hook of the specified type, optionally returning the final\n * value of the call chain.\n *\n * @param {import('.').Hooks}    hooks                  Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [returnFirstArg=false] Whether each hook callback is expected to\n *                                                      return its first argument.\n *\n * @return {(hookName:string, ...args: unknown[]) => unknown} Function that runs hook callbacks.\n */\nfunction createRunHook(hooks, storeKey) {\n  let returnFirstArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return function runHooks(hookName) {\n    const hooksStore = hooks[storeKey];\n\n    if (!hooksStore[hookName]) {\n      hooksStore[hookName] = {\n        handlers: [],\n        runs: 0\n      };\n    }\n\n    hooksStore[hookName].runs++;\n    const handlers = hooksStore[hookName].handlers; // The following code is stripped from production builds.\n\n    if ('production' !== process.env.NODE_ENV) {\n      // Handle any 'all' hooks registered.\n      if ('hookAdded' !== hookName && hooksStore.all) {\n        handlers.push(...hooksStore.all.handlers);\n      }\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (!handlers || !handlers.length) {\n      return returnFirstArg ? args[0] : undefined;\n    }\n\n    const hookInfo = {\n      name: hookName,\n      currentIndex: 0\n    };\n\n    hooksStore.__current.push(hookInfo);\n\n    while (hookInfo.currentIndex < handlers.length) {\n      const handler = handlers[hookInfo.currentIndex];\n      const result = handler.callback.apply(null, args);\n\n      if (returnFirstArg) {\n        args[0] = result;\n      }\n\n      hookInfo.currentIndex++;\n    }\n\n    hooksStore.__current.pop();\n\n    if (returnFirstArg) {\n      return args[0];\n    }\n  };\n}\n\nexport default createRunHook;\n//# sourceMappingURL=createRunHook.js.map","/**\n * Returns a function which, when invoked, will return the name of the\n * currently running hook, or `null` if no hook of the given type is currently\n * running.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {() => string | null} Function that returns the current hook name or null.\n */\nfunction createCurrentHook(hooks, storeKey) {\n  return function currentHook() {\n    var _hooksStore$__current, _hooksStore$__current2;\n\n    const hooksStore = hooks[storeKey];\n    return (_hooksStore$__current = (_hooksStore$__current2 = hooksStore.__current[hooksStore.__current.length - 1]) === null || _hooksStore$__current2 === void 0 ? void 0 : _hooksStore$__current2.name) !== null && _hooksStore$__current !== void 0 ? _hooksStore$__current : null;\n  };\n}\n\nexport default createCurrentHook;\n//# sourceMappingURL=createCurrentHook.js.map","/**\n * @callback DoingHook\n * Returns whether a hook is currently being executed.\n *\n * @param {string} [hookName] The name of the hook to check for.  If\n *                            omitted, will check for any hook being executed.\n *\n * @return {boolean} Whether the hook is being executed.\n */\n\n/**\n * Returns a function which, when invoked, will return whether a hook is\n * currently being executed.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DoingHook} Function that returns whether a hook is currently\n *                     being executed.\n */\nfunction createDoingHook(hooks, storeKey) {\n  return function doingHook(hookName) {\n    const hooksStore = hooks[storeKey]; // If the hookName was not passed, check for any current hook.\n\n    if ('undefined' === typeof hookName) {\n      return 'undefined' !== typeof hooksStore.__current[0];\n    } // Return the __current hook.\n\n\n    return hooksStore.__current[0] ? hookName === hooksStore.__current[0].name : false;\n  };\n}\n\nexport default createDoingHook;\n//# sourceMappingURL=createDoingHook.js.map","/**\n * Internal dependencies\n */\nimport validateHookName from './validateHookName.js';\n/**\n * @callback DidHook\n *\n * Returns the number of times an action has been fired.\n *\n * @param {string} hookName The hook name to check.\n *\n * @return {number | undefined} The number of times the hook has run.\n */\n\n/**\n * Returns a function which, when invoked, will return the number of times a\n * hook has been called.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DidHook} Function that returns a hook's call count.\n */\n\nfunction createDidHook(hooks, storeKey) {\n  return function didHook(hookName) {\n    const hooksStore = hooks[storeKey];\n\n    if (!validateHookName(hookName)) {\n      return;\n    }\n\n    return hooksStore[hookName] && hooksStore[hookName].runs ? hooksStore[hookName].runs : 0;\n  };\n}\n\nexport default createDidHook;\n//# sourceMappingURL=createDidHook.js.map","/**\n * Internal dependencies\n */\nimport createAddHook from './createAddHook';\nimport createRemoveHook from './createRemoveHook';\nimport createHasHook from './createHasHook';\nimport createRunHook from './createRunHook';\nimport createCurrentHook from './createCurrentHook';\nimport createDoingHook from './createDoingHook';\nimport createDidHook from './createDidHook';\n/**\n * Internal class for constructing hooks. Use `createHooks()` function\n *\n * Note, it is necessary to expose this class to make its type public.\n *\n * @private\n */\n\nexport class _Hooks {\n  constructor() {\n    /** @type {import('.').Store} actions */\n    this.actions = Object.create(null);\n    this.actions.__current = [];\n    /** @type {import('.').Store} filters */\n\n    this.filters = Object.create(null);\n    this.filters.__current = [];\n    this.addAction = createAddHook(this, 'actions');\n    this.addFilter = createAddHook(this, 'filters');\n    this.removeAction = createRemoveHook(this, 'actions');\n    this.removeFilter = createRemoveHook(this, 'filters');\n    this.hasAction = createHasHook(this, 'actions');\n    this.hasFilter = createHasHook(this, 'filters');\n    this.removeAllActions = createRemoveHook(this, 'actions', true);\n    this.removeAllFilters = createRemoveHook(this, 'filters', true);\n    this.doAction = createRunHook(this, 'actions');\n    this.applyFilters = createRunHook(this, 'filters', true);\n    this.currentAction = createCurrentHook(this, 'actions');\n    this.currentFilter = createCurrentHook(this, 'filters');\n    this.doingAction = createDoingHook(this, 'actions');\n    this.doingFilter = createDoingHook(this, 'filters');\n    this.didAction = createDidHook(this, 'actions');\n    this.didFilter = createDidHook(this, 'filters');\n  }\n\n}\n/** @typedef {_Hooks} Hooks */\n\n/**\n * Returns an instance of the hooks object.\n *\n * @return {Hooks} A Hooks instance.\n */\n\nfunction createHooks() {\n  return new _Hooks();\n}\n\nexport default createHooks;\n//# sourceMappingURL=createHooks.js.map","/**\n * Internal dependencies\n */\nimport createHooks from './createHooks';\n/** @typedef {(...args: any[])=>any} Callback */\n\n/**\n * @typedef Handler\n * @property {Callback} callback  The callback\n * @property {string}   namespace The namespace\n * @property {number}   priority  The namespace\n */\n\n/**\n * @typedef Hook\n * @property {Handler[]} handlers Array of handlers\n * @property {number}    runs     Run counter\n */\n\n/**\n * @typedef Current\n * @property {string} name         Hook name\n * @property {number} currentIndex The index\n */\n\n/**\n * @typedef {Record<string, Hook> & {__current: Current[]}} Store\n */\n\n/**\n * @typedef {'actions' | 'filters'} StoreKey\n */\n\n/**\n * @typedef {import('./createHooks').Hooks} Hooks\n */\n\nexport const defaultHooks = createHooks();\nconst {\n  addAction,\n  addFilter,\n  removeAction,\n  removeFilter,\n  hasAction,\n  hasFilter,\n  removeAllActions,\n  removeAllFilters,\n  doAction,\n  applyFilters,\n  currentAction,\n  currentFilter,\n  doingAction,\n  doingFilter,\n  didAction,\n  didFilter,\n  actions,\n  filters\n} = defaultHooks;\nexport { createHooks, addAction, addFilter, removeAction, removeFilter, hasAction, hasFilter, removeAllActions, removeAllFilters, doAction, applyFilters, currentAction, currentFilter, doingAction, doingFilter, didAction, didFilter, actions, filters };\n//# sourceMappingURL=index.js.map","/**\n * Internal dependencies\n */\nimport { createI18n } from './create-i18n';\n/**\n * WordPress dependencies\n */\n\nimport { defaultHooks } from '@wordpress/hooks';\nconst i18n = createI18n(undefined, undefined, defaultHooks);\n/**\n * Default, singleton instance of `I18n`.\n */\n\nexport default i18n;\n/*\n * Comments in this file are duplicated from ./i18n due to\n * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722\n */\n\n/**\n * @typedef {import('./create-i18n').LocaleData} LocaleData\n * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback\n * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback\n */\n\n/**\n * Returns locale data by domain in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {string} [domain] Domain for which to get the data.\n * @return {LocaleData} Locale data.\n */\n\nexport const getLocaleData = i18n.getLocaleData.bind(i18n);\n/**\n * Merges locale data into the Tannin instance by domain. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\n\nexport const setLocaleData = i18n.setLocaleData.bind(i18n);\n/**\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\n\nexport const resetLocaleData = i18n.resetLocaleData.bind(i18n);\n/**\n * Subscribes to changes of locale data\n *\n * @param {SubscribeCallback} callback Subscription callback\n * @return {UnsubscribeCallback} Unsubscribe callback\n */\n\nexport const subscribe = i18n.subscribe.bind(i18n);\n/**\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n *\n * @param {string} text     Text to translate.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated text.\n */\n\nexport const __ = i18n.__.bind(i18n);\n/**\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n *\n * @param {string} text     Text to translate.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated context string without pipe.\n */\n\nexport const _x = i18n._x.bind(i18n);\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\n\nexport const _n = i18n._n.bind(i18n);\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\n\nexport const _nx = i18n._nx.bind(i18n);\n/**\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n *\n * @return {boolean} Whether locale is RTL.\n */\n\nexport const isRTL = i18n.isRTL.bind(i18n);\n/**\n * Check if there is a translation for a given string (in singular form).\n *\n * @param {string} single    Singular form of the string to look up.\n * @param {string} [context] Context information for the translators.\n * @param {string} [domain]  Domain to retrieve the translated text.\n * @return {boolean} Whether the translation exists or not.\n */\n\nexport const hasTranslation = i18n.hasTranslation.bind(i18n);\n//# sourceMappingURL=default-i18n.js.map","import { __, _x, _n, sprintf } from \"@wordpress/i18n\";\nlet currentYear = new Date().getFullYear();\n//const { __, _x, _n, sprintf } = wp.i18n;\n/*\nDatenstruktur:\n0 {monat: \"3\", jahr: \"2020\", hits: \"222475\", files: \"188973\", hosts: \"2112\", …}\n...\n*/\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\nconsole.log(linechartDataset);\n  if (linechartDataset === undefined){\n    console.log(\"Data could not be retrieved\");\n    console.log(linechartDataset);\n  } else {\n    console.log(\"else\");\n    console.log(linechartDataset);\n  let filterData = (dataset, year) => {\n    let output = dataset.filter(data => {\n      return data.jahr === year.toString();\n    });\n    return output;\n  }\n\n  let outputThirdYear = filterData(linechartDataset, currentYear);\n  let outputSecondYear = filterData(linechartDataset, currentYear-1);\n  let outputFirstYear = filterData(linechartDataset, currentYear-2);\n\n  let generateDatasets = (dataset) => {\n    let datasetDummy = [null, null, null, null, null, null, null, null, null, null, null, null];\n    let datasetOutput = datasetDummy;\n    dataset.forEach(data => {\n      datasetOutput[parseInt(data.monat)-1] = parseInt(data.visits);\n    });\n    return datasetOutput;\n  }\n\n  let datasetFirstYear = generateDatasets(outputFirstYear);\n  let datasetSecondYear = generateDatasets(outputSecondYear);\n  let datasetThirdYear = generateDatasets(outputThirdYear);\n  \nHighcharts.chart('container', {\n    chart: {\n      type: 'areaspline'\n    },\n    title: {\n      text: headlineDescriptiontext\n    },\n    legend: {\n      layout: 'vertical',\n      align: 'left',\n      verticalAlign: 'top',\n      x: 150,\n      y: 100,\n      floating: true,\n      borderWidth: 1,\n      backgroundColor:\n        Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\n    },\n    xAxis: {\n      categories: abscissaDescriptiontext,\n    },\n    yAxis: {\n      title: {\n        text: ordinateDescriptiontext\n      }\n    },\n    tooltip: {\n      shared: true,\n      valueSuffix: tooltipDesc\n    },\n    credits: {\n      enabled: false\n    },\n    plotOptions: {\n      areaspline: {\n        fillOpacity: 0.3\n      }\n    },\n    series: [\n      {\n      name: (currentYear-2).toString(),\n      data: datasetFirstYear\n    },\n      {\n      name: (currentYear-1).toString(),\n      data: datasetSecondYear\n    },\n             {\n      name: currentYear,\n      data: datasetThirdYear\n    }, \n            ]\n  });\n  };\n  \n});\n"],"names":["module","exports","fn","options","head","tail","size","memoized","args","i","node","len","arguments","length","searchCache","next","prev","val","Array","apply","maxSize","clear","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key","key_access","index_access","sign","sprintf","sprintf_format","sprintf_parse","vsprintf","fmt","argv","concat","parse_tree","arg","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","output","keys","undefined","Error","param_no","test","type","Function","isNaN","TypeError","parseInt","toString","String","fromCharCode","JSON","stringify","width","precision","parseFloat","toExponential","toFixed","Number","toPrecision","substring","Object","prototype","call","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","repeat","align","sprintf_cache","create","match","_fmt","arg_names","exec","push","SyntaxError","field_list","replacement_field","field_match","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","hasOwnProperty","console","error","PRECEDENCE","OPENERS","TERMINATORS","PATTERN","OPERATORS","b","c","compile","expression","terms","operator","term","element","stack","substr","index","trim","pop","indexOf","reverse","postfix","variables","j","getOperatorResult","value","earlyReturn","evaluate","DEFAULT_OPTIONS","contextDelimiter","onMissingKey","Tannin","data","this","pluralForms","getPluralForm","domain","config","plural","pf","plural_forms","parts","part","split","getPluralExpression","dcnpgettext","context","singular","entry","DEFAULT_LOCALE_DATA","I18N_HOOK_REGEXP","namespace","hookName","hooks","storeKey","callback","priority","hooksStore","handler","handlers","splice","__current","forEach","hookInfo","name","currentIndex","runs","doAction","removeAll","handlersRemoved","some","hook","returnFirstArg","_len","_key","result","_hooksStore$__current","_hooksStore$__current2","_Hooks","constructor","actions","filters","addAction","addFilter","removeAction","removeFilter","hasAction","hasFilter","removeAllActions","removeAllFilters","applyFilters","currentAction","currentFilter","doingAction","doingFilter","didAction","didFilter","defaultHooks","i18n","initialData","initialDomain","tannin","listeners","Set","notifyListeners","listener","doSetLocaleData","_tannin$data$domain","setLocaleData","single","getFilterDomain","_x","translation","onHookAddedOrRemoved","getLocaleData","addLocaleData","_tannin$data$domain2","resetLocaleData","subscribe","add","delete","__","_n","_nx","isRTL","hasTranslation","_tannin$data","_tannin$data2","createI18n","bind","currentYear","Date","getFullYear","document","addEventListener","event","log","linechartDataset","filterData","dataset","year","filter","jahr","outputThirdYear","outputSecondYear","generateDatasets","datasetOutput","monat","visits","datasetFirstYear","datasetSecondYear","datasetThirdYear","Highcharts","chart","title","headlineDescriptiontext","legend","layout","verticalAlign","x","y","floating","borderWidth","backgroundColor","defaultOptions","xAxis","categories","abscissaDescriptiontext","yAxis","ordinateDescriptiontext","tooltip","shared","valueSuffix","tooltipDesc","credits","enabled","plotOptions","areaspline","fillOpacity","series"],"sourceRoot":""}