{"version":3,"file":"highchartsIndex.js","mappings":"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","sources":["webpack://rrze-statistik/./node_modules/@tannin/compile/index.js","webpack://rrze-statistik/./node_modules/@tannin/evaluate/index.js","webpack://rrze-statistik/./node_modules/@tannin/plural-forms/index.js","webpack://rrze-statistik/./node_modules/@tannin/postfix/index.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createAddHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createCurrentHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createDidHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createDoingHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createHasHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createHooks.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createRemoveHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/createRunHook.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/index.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/validateHookName.js","webpack://rrze-statistik/./node_modules/@wordpress/hooks/build-module/validateNamespace.js","webpack://rrze-statistik/./node_modules/@wordpress/i18n/build-module/create-i18n.js","webpack://rrze-statistik/./node_modules/@wordpress/i18n/build-module/default-i18n.js","webpack://rrze-statistik/./node_modules/@wordpress/i18n/build-module/sprintf.js","webpack://rrze-statistik/./src/highcharts/highcharts.js","webpack://rrze-statistik/./node_modules/memize/index.js","webpack://rrze-statistik/./node_modules/sprintf-js/src/sprintf.js","webpack://rrze-statistik/./node_modules/tannin/index.js","webpack://rrze-statistik/webpack/bootstrap","webpack://rrze-statistik/webpack/runtime/compat get default export","webpack://rrze-statistik/webpack/runtime/define property getters","webpack://rrze-statistik/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["import postfix from '@tannin/postfix';\nimport evaluate from '@tannin/evaluate';\n\n/**\n * Given a C expression, returns a function which can be called to evaluate its\n * result.\n *\n * @example\n *\n * ```js\n * import compile from '@tannin/compile';\n *\n * const evaluate = compile( 'n > 1' );\n *\n * evaluate( { n: 2 } );\n * // ⇒ true\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {(variables?:{[variable:string]:*})=>*} Compiled evaluator.\n */\nexport default function compile( expression ) {\n\tvar terms = postfix( expression );\n\n\treturn function( variables ) {\n\t\treturn evaluate( terms, variables );\n\t};\n}\n","/**\n * Operator callback functions.\n *\n * @type {Object}\n */\nvar OPERATORS = {\n\t'!': function( a ) {\n\t\treturn ! a;\n\t},\n\t'*': function( a, b ) {\n\t\treturn a * b;\n\t},\n\t'/': function( a, b ) {\n\t\treturn a / b;\n\t},\n\t'%': function( a, b ) {\n\t\treturn a % b;\n\t},\n\t'+': function( a, b ) {\n\t\treturn a + b;\n\t},\n\t'-': function( a, b ) {\n\t\treturn a - b;\n\t},\n\t'<': function( a, b ) {\n\t\treturn a < b;\n\t},\n\t'<=': function( a, b ) {\n\t\treturn a <= b;\n\t},\n\t'>': function( a, b ) {\n\t\treturn a > b;\n\t},\n\t'>=': function( a, b ) {\n\t\treturn a >= b;\n\t},\n\t'==': function( a, b ) {\n\t\treturn a === b;\n\t},\n\t'!=': function( a, b ) {\n\t\treturn a !== b;\n\t},\n\t'&&': function( a, b ) {\n\t\treturn a && b;\n\t},\n\t'||': function( a, b ) {\n\t\treturn a || b;\n\t},\n\t'?:': function( a, b, c ) {\n\t\tif ( a ) {\n\t\t\tthrow b;\n\t\t}\n\n\t\treturn c;\n\t},\n};\n\n/**\n * Given an array of postfix terms and operand variables, returns the result of\n * the postfix evaluation.\n *\n * @example\n *\n * ```js\n * import evaluate from '@tannin/evaluate';\n *\n * // 3 + 4 * 5 / 6 ⇒ '3 4 5 * 6 / +'\n * const terms = [ '3', '4', '5', '*', '6', '/', '+' ];\n *\n * evaluate( terms, {} );\n * // ⇒ 6.333333333333334\n * ```\n *\n * @param {string[]} postfix   Postfix terms.\n * @param {Object}   variables Operand variables.\n *\n * @return {*} Result of evaluation.\n */\nexport default function evaluate( postfix, variables ) {\n\tvar stack = [],\n\t\ti, j, args, getOperatorResult, term, value;\n\n\tfor ( i = 0; i < postfix.length; i++ ) {\n\t\tterm = postfix[ i ];\n\n\t\tgetOperatorResult = OPERATORS[ term ];\n\t\tif ( getOperatorResult ) {\n\t\t\t// Pop from stack by number of function arguments.\n\t\t\tj = getOperatorResult.length;\n\t\t\targs = Array( j );\n\t\t\twhile ( j-- ) {\n\t\t\t\targs[ j ] = stack.pop();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvalue = getOperatorResult.apply( null, args );\n\t\t\t} catch ( earlyReturn ) {\n\t\t\t\treturn earlyReturn;\n\t\t\t}\n\t\t} else if ( variables.hasOwnProperty( term ) ) {\n\t\t\tvalue = variables[ term ];\n\t\t} else {\n\t\t\tvalue = +term;\n\t\t}\n\n\t\tstack.push( value );\n\t}\n\n\treturn stack[ 0 ];\n}\n","import compile from '@tannin/compile';\n\n/**\n * Given a C expression, returns a function which, when called with a value,\n * evaluates the result with the value assumed to be the \"n\" variable of the\n * expression. The result will be coerced to its numeric equivalent.\n *\n * @param {string} expression C expression.\n *\n * @return {Function} Evaluator function.\n */\nexport default function pluralForms( expression ) {\n\tvar evaluate = compile( expression );\n\n\treturn function( n ) {\n\t\treturn +evaluate( { n: n } );\n\t};\n}\n","var PRECEDENCE, OPENERS, TERMINATORS, PATTERN;\n\n/**\n * Operator precedence mapping.\n *\n * @type {Object}\n */\nPRECEDENCE = {\n\t'(': 9,\n\t'!': 8,\n\t'*': 7,\n\t'/': 7,\n\t'%': 7,\n\t'+': 6,\n\t'-': 6,\n\t'<': 5,\n\t'<=': 5,\n\t'>': 5,\n\t'>=': 5,\n\t'==': 4,\n\t'!=': 4,\n\t'&&': 3,\n\t'||': 2,\n\t'?': 1,\n\t'?:': 1,\n};\n\n/**\n * Characters which signal pair opening, to be terminated by terminators.\n *\n * @type {string[]}\n */\nOPENERS = [ '(', '?' ];\n\n/**\n * Characters which signal pair termination, the value an array with the\n * opener as its first member. The second member is an optional operator\n * replacement to push to the stack.\n *\n * @type {string[]}\n */\nTERMINATORS = {\n\t')': [ '(' ],\n\t':': [ '?', '?:' ],\n};\n\n/**\n * Pattern matching operators and openers.\n *\n * @type {RegExp}\n */\nPATTERN = /<=|>=|==|!=|&&|\\|\\||\\?:|\\(|!|\\*|\\/|%|\\+|-|<|>|\\?|\\)|:/;\n\n/**\n * Given a C expression, returns the equivalent postfix (Reverse Polish)\n * notation terms as an array.\n *\n * If a postfix string is desired, simply `.join( ' ' )` the result.\n *\n * @example\n *\n * ```js\n * import postfix from '@tannin/postfix';\n *\n * postfix( 'n > 1' );\n * // ⇒ [ 'n', '1', '>' ]\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {string[]} Postfix terms.\n */\nexport default function postfix( expression ) {\n\tvar terms = [],\n\t\tstack = [],\n\t\tmatch, operator, term, element;\n\n\twhile ( ( match = expression.match( PATTERN ) ) ) {\n\t\toperator = match[ 0 ];\n\n\t\t// Term is the string preceding the operator match. It may contain\n\t\t// whitespace, and may be empty (if operator is at beginning).\n\t\tterm = expression.substr( 0, match.index ).trim();\n\t\tif ( term ) {\n\t\t\tterms.push( term );\n\t\t}\n\n\t\twhile ( ( element = stack.pop() ) ) {\n\t\t\tif ( TERMINATORS[ operator ] ) {\n\t\t\t\tif ( TERMINATORS[ operator ][ 0 ] === element ) {\n\t\t\t\t\t// Substitution works here under assumption that because\n\t\t\t\t\t// the assigned operator will no longer be a terminator, it\n\t\t\t\t\t// will be pushed to the stack during the condition below.\n\t\t\t\t\toperator = TERMINATORS[ operator ][ 1 ] || operator;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if ( OPENERS.indexOf( element ) >= 0 || PRECEDENCE[ element ] < PRECEDENCE[ operator ] ) {\n\t\t\t\t// Push to stack if either an opener or when pop reveals an\n\t\t\t\t// element of lower precedence.\n\t\t\t\tstack.push( element );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// For each popped from stack, push to terms.\n\t\t\tterms.push( element );\n\t\t}\n\n\t\tif ( ! TERMINATORS[ operator ] ) {\n\t\t\tstack.push( operator );\n\t\t}\n\n\t\t// Slice matched fragment from expression to continue match.\n\t\texpression = expression.substr( match.index + operator.length );\n\t}\n\n\t// Push remainder of operand, if exists, to terms.\n\texpression = expression.trim();\n\tif ( expression ) {\n\t\tterms.push( expression );\n\t}\n\n\t// Pop remaining items from stack into terms.\n\treturn terms.concat( stack.reverse() );\n}\n","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n/**\n * @callback AddHook\n *\n * Adds the hook to the appropriate hooks container.\n *\n * @param {string}               hookName      Name of hook to add\n * @param {string}               namespace     The unique namespace identifying the callback in the form `vendor/plugin/function`.\n * @param {import('.').Callback} callback      Function to call when the hook is run\n * @param {number}               [priority=10] Priority of this hook\n */\n\n/**\n * Returns a function which, when invoked, will add a hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {AddHook} Function that adds a new hook.\n */\n\nfunction createAddHook(hooks, storeKey) {\n  return function addHook(hookName, namespace, callback) {\n    let priority = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n    const hooksStore = hooks[storeKey];\n\n    if (!validateHookName(hookName)) {\n      return;\n    }\n\n    if (!validateNamespace(namespace)) {\n      return;\n    }\n\n    if ('function' !== typeof callback) {\n      // eslint-disable-next-line no-console\n      console.error('The hook callback must be a function.');\n      return;\n    } // Validate numeric priority\n\n\n    if ('number' !== typeof priority) {\n      // eslint-disable-next-line no-console\n      console.error('If specified, the hook priority must be a number.');\n      return;\n    }\n\n    const handler = {\n      callback,\n      priority,\n      namespace\n    };\n\n    if (hooksStore[hookName]) {\n      // Find the correct insert index of the new hook.\n      const handlers = hooksStore[hookName].handlers;\n      /** @type {number} */\n\n      let i;\n\n      for (i = handlers.length; i > 0; i--) {\n        if (priority >= handlers[i - 1].priority) {\n          break;\n        }\n      }\n\n      if (i === handlers.length) {\n        // If append, operate via direct assignment.\n        handlers[i] = handler;\n      } else {\n        // Otherwise, insert before index via splice.\n        handlers.splice(i, 0, handler);\n      } // We may also be currently executing this hook.  If the callback\n      // we're adding would come after the current callback, there's no\n      // problem; otherwise we need to increase the execution index of\n      // any other runs by 1 to account for the added element.\n\n\n      hooksStore.__current.forEach(hookInfo => {\n        if (hookInfo.name === hookName && hookInfo.currentIndex >= i) {\n          hookInfo.currentIndex++;\n        }\n      });\n    } else {\n      // This is the first hook of its type.\n      hooksStore[hookName] = {\n        handlers: [handler],\n        runs: 0\n      };\n    }\n\n    if (hookName !== 'hookAdded') {\n      hooks.doAction('hookAdded', hookName, namespace, callback, priority);\n    }\n  };\n}\n\nexport default createAddHook;\n//# sourceMappingURL=createAddHook.js.map","/**\n * Returns a function which, when invoked, will return the name of the\n * currently running hook, or `null` if no hook of the given type is currently\n * running.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {() => string | null} Function that returns the current hook name or null.\n */\nfunction createCurrentHook(hooks, storeKey) {\n  return function currentHook() {\n    var _hooksStore$__current, _hooksStore$__current2;\n\n    const hooksStore = hooks[storeKey];\n    return (_hooksStore$__current = (_hooksStore$__current2 = hooksStore.__current[hooksStore.__current.length - 1]) === null || _hooksStore$__current2 === void 0 ? void 0 : _hooksStore$__current2.name) !== null && _hooksStore$__current !== void 0 ? _hooksStore$__current : null;\n  };\n}\n\nexport default createCurrentHook;\n//# sourceMappingURL=createCurrentHook.js.map","/**\n * Internal dependencies\n */\nimport validateHookName from './validateHookName.js';\n/**\n * @callback DidHook\n *\n * Returns the number of times an action has been fired.\n *\n * @param {string} hookName The hook name to check.\n *\n * @return {number | undefined} The number of times the hook has run.\n */\n\n/**\n * Returns a function which, when invoked, will return the number of times a\n * hook has been called.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DidHook} Function that returns a hook's call count.\n */\n\nfunction createDidHook(hooks, storeKey) {\n  return function didHook(hookName) {\n    const hooksStore = hooks[storeKey];\n\n    if (!validateHookName(hookName)) {\n      return;\n    }\n\n    return hooksStore[hookName] && hooksStore[hookName].runs ? hooksStore[hookName].runs : 0;\n  };\n}\n\nexport default createDidHook;\n//# sourceMappingURL=createDidHook.js.map","/**\n * @callback DoingHook\n * Returns whether a hook is currently being executed.\n *\n * @param {string} [hookName] The name of the hook to check for.  If\n *                            omitted, will check for any hook being executed.\n *\n * @return {boolean} Whether the hook is being executed.\n */\n\n/**\n * Returns a function which, when invoked, will return whether a hook is\n * currently being executed.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DoingHook} Function that returns whether a hook is currently\n *                     being executed.\n */\nfunction createDoingHook(hooks, storeKey) {\n  return function doingHook(hookName) {\n    const hooksStore = hooks[storeKey]; // If the hookName was not passed, check for any current hook.\n\n    if ('undefined' === typeof hookName) {\n      return 'undefined' !== typeof hooksStore.__current[0];\n    } // Return the __current hook.\n\n\n    return hooksStore.__current[0] ? hookName === hooksStore.__current[0].name : false;\n  };\n}\n\nexport default createDoingHook;\n//# sourceMappingURL=createDoingHook.js.map","/**\n * @callback HasHook\n *\n * Returns whether any handlers are attached for the given hookName and optional namespace.\n *\n * @param {string} hookName    The name of the hook to check for.\n * @param {string} [namespace] Optional. The unique namespace identifying the callback\n *                             in the form `vendor/plugin/function`.\n *\n * @return {boolean} Whether there are handlers that are attached to the given hook.\n */\n\n/**\n * Returns a function which, when invoked, will return whether any handlers are\n * attached to a particular hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {HasHook} Function that returns whether any handlers are\n *                   attached to a particular hook and optional namespace.\n */\nfunction createHasHook(hooks, storeKey) {\n  return function hasHook(hookName, namespace) {\n    const hooksStore = hooks[storeKey]; // Use the namespace if provided.\n\n    if ('undefined' !== typeof namespace) {\n      return hookName in hooksStore && hooksStore[hookName].handlers.some(hook => hook.namespace === namespace);\n    }\n\n    return hookName in hooksStore;\n  };\n}\n\nexport default createHasHook;\n//# sourceMappingURL=createHasHook.js.map","/**\n * Internal dependencies\n */\nimport createAddHook from './createAddHook';\nimport createRemoveHook from './createRemoveHook';\nimport createHasHook from './createHasHook';\nimport createRunHook from './createRunHook';\nimport createCurrentHook from './createCurrentHook';\nimport createDoingHook from './createDoingHook';\nimport createDidHook from './createDidHook';\n/**\n * Internal class for constructing hooks. Use `createHooks()` function\n *\n * Note, it is necessary to expose this class to make its type public.\n *\n * @private\n */\n\nexport class _Hooks {\n  constructor() {\n    /** @type {import('.').Store} actions */\n    this.actions = Object.create(null);\n    this.actions.__current = [];\n    /** @type {import('.').Store} filters */\n\n    this.filters = Object.create(null);\n    this.filters.__current = [];\n    this.addAction = createAddHook(this, 'actions');\n    this.addFilter = createAddHook(this, 'filters');\n    this.removeAction = createRemoveHook(this, 'actions');\n    this.removeFilter = createRemoveHook(this, 'filters');\n    this.hasAction = createHasHook(this, 'actions');\n    this.hasFilter = createHasHook(this, 'filters');\n    this.removeAllActions = createRemoveHook(this, 'actions', true);\n    this.removeAllFilters = createRemoveHook(this, 'filters', true);\n    this.doAction = createRunHook(this, 'actions');\n    this.applyFilters = createRunHook(this, 'filters', true);\n    this.currentAction = createCurrentHook(this, 'actions');\n    this.currentFilter = createCurrentHook(this, 'filters');\n    this.doingAction = createDoingHook(this, 'actions');\n    this.doingFilter = createDoingHook(this, 'filters');\n    this.didAction = createDidHook(this, 'actions');\n    this.didFilter = createDidHook(this, 'filters');\n  }\n\n}\n/** @typedef {_Hooks} Hooks */\n\n/**\n * Returns an instance of the hooks object.\n *\n * @return {Hooks} A Hooks instance.\n */\n\nfunction createHooks() {\n  return new _Hooks();\n}\n\nexport default createHooks;\n//# sourceMappingURL=createHooks.js.map","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n/**\n * @callback RemoveHook\n * Removes the specified callback (or all callbacks) from the hook with a given hookName\n * and namespace.\n *\n * @param {string} hookName  The name of the hook to modify.\n * @param {string} namespace The unique namespace identifying the callback in the\n *                           form `vendor/plugin/function`.\n *\n * @return {number | undefined} The number of callbacks removed.\n */\n\n/**\n * Returns a function which, when invoked, will remove a specified hook or all\n * hooks by the given name.\n *\n * @param {import('.').Hooks}    hooks             Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [removeAll=false] Whether to remove all callbacks for a hookName,\n *                                                 without regard to namespace. Used to create\n *                                                 `removeAll*` functions.\n *\n * @return {RemoveHook} Function that removes hooks.\n */\n\nfunction createRemoveHook(hooks, storeKey) {\n  let removeAll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return function removeHook(hookName, namespace) {\n    const hooksStore = hooks[storeKey];\n\n    if (!validateHookName(hookName)) {\n      return;\n    }\n\n    if (!removeAll && !validateNamespace(namespace)) {\n      return;\n    } // Bail if no hooks exist by this name\n\n\n    if (!hooksStore[hookName]) {\n      return 0;\n    }\n\n    let handlersRemoved = 0;\n\n    if (removeAll) {\n      handlersRemoved = hooksStore[hookName].handlers.length;\n      hooksStore[hookName] = {\n        runs: hooksStore[hookName].runs,\n        handlers: []\n      };\n    } else {\n      // Try to find the specified callback to remove.\n      const handlers = hooksStore[hookName].handlers;\n\n      for (let i = handlers.length - 1; i >= 0; i--) {\n        if (handlers[i].namespace === namespace) {\n          handlers.splice(i, 1);\n          handlersRemoved++; // This callback may also be part of a hook that is\n          // currently executing.  If the callback we're removing\n          // comes after the current callback, there's no problem;\n          // otherwise we need to decrease the execution index of any\n          // other runs by 1 to account for the removed element.\n\n          hooksStore.__current.forEach(hookInfo => {\n            if (hookInfo.name === hookName && hookInfo.currentIndex >= i) {\n              hookInfo.currentIndex--;\n            }\n          });\n        }\n      }\n    }\n\n    if (hookName !== 'hookRemoved') {\n      hooks.doAction('hookRemoved', hookName, namespace);\n    }\n\n    return handlersRemoved;\n  };\n}\n\nexport default createRemoveHook;\n//# sourceMappingURL=createRemoveHook.js.map","/**\n * Returns a function which, when invoked, will execute all callbacks\n * registered to a hook of the specified type, optionally returning the final\n * value of the call chain.\n *\n * @param {import('.').Hooks}    hooks                  Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [returnFirstArg=false] Whether each hook callback is expected to\n *                                                      return its first argument.\n *\n * @return {(hookName:string, ...args: unknown[]) => unknown} Function that runs hook callbacks.\n */\nfunction createRunHook(hooks, storeKey) {\n  let returnFirstArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return function runHooks(hookName) {\n    const hooksStore = hooks[storeKey];\n\n    if (!hooksStore[hookName]) {\n      hooksStore[hookName] = {\n        handlers: [],\n        runs: 0\n      };\n    }\n\n    hooksStore[hookName].runs++;\n    const handlers = hooksStore[hookName].handlers; // The following code is stripped from production builds.\n\n    if ('production' !== process.env.NODE_ENV) {\n      // Handle any 'all' hooks registered.\n      if ('hookAdded' !== hookName && hooksStore.all) {\n        handlers.push(...hooksStore.all.handlers);\n      }\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (!handlers || !handlers.length) {\n      return returnFirstArg ? args[0] : undefined;\n    }\n\n    const hookInfo = {\n      name: hookName,\n      currentIndex: 0\n    };\n\n    hooksStore.__current.push(hookInfo);\n\n    while (hookInfo.currentIndex < handlers.length) {\n      const handler = handlers[hookInfo.currentIndex];\n      const result = handler.callback.apply(null, args);\n\n      if (returnFirstArg) {\n        args[0] = result;\n      }\n\n      hookInfo.currentIndex++;\n    }\n\n    hooksStore.__current.pop();\n\n    if (returnFirstArg) {\n      return args[0];\n    }\n  };\n}\n\nexport default createRunHook;\n//# sourceMappingURL=createRunHook.js.map","/**\n * Internal dependencies\n */\nimport createHooks from './createHooks';\n/** @typedef {(...args: any[])=>any} Callback */\n\n/**\n * @typedef Handler\n * @property {Callback} callback  The callback\n * @property {string}   namespace The namespace\n * @property {number}   priority  The namespace\n */\n\n/**\n * @typedef Hook\n * @property {Handler[]} handlers Array of handlers\n * @property {number}    runs     Run counter\n */\n\n/**\n * @typedef Current\n * @property {string} name         Hook name\n * @property {number} currentIndex The index\n */\n\n/**\n * @typedef {Record<string, Hook> & {__current: Current[]}} Store\n */\n\n/**\n * @typedef {'actions' | 'filters'} StoreKey\n */\n\n/**\n * @typedef {import('./createHooks').Hooks} Hooks\n */\n\nexport const defaultHooks = createHooks();\nconst {\n  addAction,\n  addFilter,\n  removeAction,\n  removeFilter,\n  hasAction,\n  hasFilter,\n  removeAllActions,\n  removeAllFilters,\n  doAction,\n  applyFilters,\n  currentAction,\n  currentFilter,\n  doingAction,\n  doingFilter,\n  didAction,\n  didFilter,\n  actions,\n  filters\n} = defaultHooks;\nexport { createHooks, addAction, addFilter, removeAction, removeFilter, hasAction, hasFilter, removeAllActions, removeAllFilters, doAction, applyFilters, currentAction, currentFilter, doingAction, doingFilter, didAction, didFilter, actions, filters };\n//# sourceMappingURL=index.js.map","/**\n * Validate a hookName string.\n *\n * @param {string} hookName The hook name to validate. Should be a non empty string containing\n *                          only numbers, letters, dashes, periods and underscores. Also,\n *                          the hook name cannot begin with `__`.\n *\n * @return {boolean} Whether the hook name is valid.\n */\nfunction validateHookName(hookName) {\n  if ('string' !== typeof hookName || '' === hookName) {\n    // eslint-disable-next-line no-console\n    console.error('The hook name must be a non-empty string.');\n    return false;\n  }\n\n  if (/^__/.test(hookName)) {\n    // eslint-disable-next-line no-console\n    console.error('The hook name cannot begin with `__`.');\n    return false;\n  }\n\n  if (!/^[a-zA-Z][a-zA-Z0-9_.-]*$/.test(hookName)) {\n    // eslint-disable-next-line no-console\n    console.error('The hook name can only contain numbers, letters, dashes, periods and underscores.');\n    return false;\n  }\n\n  return true;\n}\n\nexport default validateHookName;\n//# sourceMappingURL=validateHookName.js.map","/**\n * Validate a namespace string.\n *\n * @param {string} namespace The namespace to validate - should take the form\n *                           `vendor/plugin/function`.\n *\n * @return {boolean} Whether the namespace is valid.\n */\nfunction validateNamespace(namespace) {\n  if ('string' !== typeof namespace || '' === namespace) {\n    // eslint-disable-next-line no-console\n    console.error('The namespace must be a non-empty string.');\n    return false;\n  }\n\n  if (!/^[a-zA-Z][a-zA-Z0-9_.\\-\\/]*$/.test(namespace)) {\n    // eslint-disable-next-line no-console\n    console.error('The namespace can only contain numbers, letters, dashes, periods, underscores and slashes.');\n    return false;\n  }\n\n  return true;\n}\n\nexport default validateNamespace;\n//# sourceMappingURL=validateNamespace.js.map","/**\n * External dependencies\n */\nimport Tannin from 'tannin';\n/**\n * @typedef {Record<string,any>} LocaleData\n */\n\n/**\n * Default locale data to use for Tannin domain when not otherwise provided.\n * Assumes an English plural forms expression.\n *\n * @type {LocaleData}\n */\n\nconst DEFAULT_LOCALE_DATA = {\n  '': {\n    /** @param {number} n */\n    plural_forms(n) {\n      return n === 1 ? 0 : 1;\n    }\n\n  }\n};\n/*\n * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,\n * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.\n */\n\nconst I18N_HOOK_REGEXP = /^i18n\\.(n?gettext|has_translation)(_|$)/;\n/**\n * @typedef {(domain?: string) => LocaleData} GetLocaleData\n *\n * Returns locale data by domain in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will overwrite the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} AddLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will also merge the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData\n *\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n\n/** @typedef {() => void} SubscribeCallback */\n\n/** @typedef {() => void} UnsubscribeCallback */\n\n/**\n * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe\n *\n * Subscribes to changes of locale data\n */\n\n/**\n * @typedef {(domain?: string) => string} GetFilterDomain\n * Retrieve the domain to use when calling domain-specific filters.\n */\n\n/**\n * @typedef {(text: string, domain?: string) => string} __\n *\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n */\n\n/**\n * @typedef {(text: string, context: string, domain?: string) => string} _x\n *\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n */\n\n/**\n * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n */\n\n/**\n * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n */\n\n/**\n * @typedef {() => boolean} IsRtl\n *\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n */\n\n/**\n * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation\n *\n * Check if there is a translation for a given string in singular form.\n */\n\n/** @typedef {import('@wordpress/hooks').Hooks} Hooks */\n\n/**\n * An i18n instance\n *\n * @typedef I18n\n * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.\n * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will overwrite the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {AddLocaleData}   addLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will also merge the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified\n *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.\n * @property {__}              __              Retrieve the translation of text.\n * @property {_x}              _x              Retrieve translated string with gettext context.\n * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied\n *                                             number.\n * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied\n *                                             number, with gettext context.\n * @property {IsRtl}           isRTL           Check if current locale is RTL.\n * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.\n */\n\n/**\n * Create an i18n instance\n *\n * @param {LocaleData} [initialData]   Locale data configuration.\n * @param {string}     [initialDomain] Domain for which configuration applies.\n * @param {Hooks}      [hooks]         Hooks implementation.\n *\n * @return {I18n} I18n instance.\n */\n\nexport const createI18n = (initialData, initialDomain, hooks) => {\n  /**\n   * The underlying instance of Tannin to which exported functions interface.\n   *\n   * @type {Tannin}\n   */\n  const tannin = new Tannin({});\n  const listeners = new Set();\n\n  const notifyListeners = () => {\n    listeners.forEach(listener => listener());\n  };\n  /**\n   * Subscribe to changes of locale data.\n   *\n   * @param {SubscribeCallback} callback Subscription callback.\n   * @return {UnsubscribeCallback} Unsubscribe callback.\n   */\n\n\n  const subscribe = callback => {\n    listeners.add(callback);\n    return () => listeners.delete(callback);\n  };\n  /** @type {GetLocaleData} */\n\n\n  const getLocaleData = function () {\n    let domain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    return tannin.data[domain];\n  };\n  /**\n   * @param {LocaleData} [data]\n   * @param {string}     [domain]\n   */\n\n\n  const doSetLocaleData = function (data) {\n    var _tannin$data$domain;\n\n    let domain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    tannin.data[domain] = { ...tannin.data[domain],\n      ...data\n    }; // Populate default domain configuration (supported locale date which omits\n    // a plural forms expression).\n\n    tannin.data[domain][''] = { ...DEFAULT_LOCALE_DATA[''],\n      ...((_tannin$data$domain = tannin.data[domain]) === null || _tannin$data$domain === void 0 ? void 0 : _tannin$data$domain[''])\n    }; // Clean up cached plural forms functions cache as it might be updated.\n\n    delete tannin.pluralForms[domain];\n  };\n  /** @type {SetLocaleData} */\n\n\n  const setLocaleData = (data, domain) => {\n    doSetLocaleData(data, domain);\n    notifyListeners();\n  };\n  /** @type {AddLocaleData} */\n\n\n  const addLocaleData = function (data) {\n    var _tannin$data$domain2;\n\n    let domain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    tannin.data[domain] = { ...tannin.data[domain],\n      ...data,\n      // Populate default domain configuration (supported locale date which omits\n      // a plural forms expression).\n      '': { ...DEFAULT_LOCALE_DATA[''],\n        ...((_tannin$data$domain2 = tannin.data[domain]) === null || _tannin$data$domain2 === void 0 ? void 0 : _tannin$data$domain2['']),\n        ...(data === null || data === void 0 ? void 0 : data[''])\n      }\n    }; // Clean up cached plural forms functions cache as it might be updated.\n\n    delete tannin.pluralForms[domain];\n    notifyListeners();\n  };\n  /** @type {ResetLocaleData} */\n\n\n  const resetLocaleData = (data, domain) => {\n    // Reset all current Tannin locale data.\n    tannin.data = {}; // Reset cached plural forms functions cache.\n\n    tannin.pluralForms = {};\n    setLocaleData(data, domain);\n  };\n  /**\n   * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not\n   * otherwise previously assigned.\n   *\n   * @param {string|undefined} domain   Domain to retrieve the translated text.\n   * @param {string|undefined} context  Context information for the translators.\n   * @param {string}           single   Text to translate if non-plural. Used as\n   *                                    fallback return value on a caught error.\n   * @param {string}           [plural] The text to be used if the number is\n   *                                    plural.\n   * @param {number}           [number] The number to compare against to use\n   *                                    either the singular or plural form.\n   *\n   * @return {string} The translated string.\n   */\n\n\n  const dcnpgettext = function () {\n    let domain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    let context = arguments.length > 1 ? arguments[1] : undefined;\n    let single = arguments.length > 2 ? arguments[2] : undefined;\n    let plural = arguments.length > 3 ? arguments[3] : undefined;\n    let number = arguments.length > 4 ? arguments[4] : undefined;\n\n    if (!tannin.data[domain]) {\n      // use `doSetLocaleData` to set silently, without notifying listeners\n      doSetLocaleData(undefined, domain);\n    }\n\n    return tannin.dcnpgettext(domain, context, single, plural, number);\n  };\n  /** @type {GetFilterDomain} */\n\n\n  const getFilterDomain = function () {\n    let domain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    return domain;\n  };\n  /** @type {__} */\n\n\n  const __ = (text, domain) => {\n    let translation = dcnpgettext(domain, undefined, text);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters text with its translation.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} text        Text to translate.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.gettext', translation, text, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.gettext_' + getFilterDomain(domain), translation, text, domain)\n    );\n  };\n  /** @type {_x} */\n\n\n  const _x = (text, context, domain) => {\n    let translation = dcnpgettext(domain, context, text);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters text with its translation based on context information.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} text        Text to translate.\n     * @param {string} context     Context information for the translators.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.gettext_with_context', translation, text, context, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.gettext_with_context_' + getFilterDomain(domain), translation, text, context, domain)\n    );\n  };\n  /** @type {_n} */\n\n\n  const _n = (single, plural, number, domain) => {\n    let translation = dcnpgettext(domain, undefined, single, plural, number);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters the singular or plural form of a string.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} single      The text to be used if the number is singular.\n     * @param {string} plural      The text to be used if the number is plural.\n     * @param {string} number      The number to compare against to use either the singular or plural form.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.ngettext', translation, single, plural, number, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.ngettext_' + getFilterDomain(domain), translation, single, plural, number, domain)\n    );\n  };\n  /** @type {_nx} */\n\n\n  const _nx = (single, plural, number, context, domain) => {\n    let translation = dcnpgettext(domain, context, single, plural, number);\n\n    if (!hooks) {\n      return translation;\n    }\n    /**\n     * Filters the singular or plural form of a string with gettext context.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} single      The text to be used if the number is singular.\n     * @param {string} plural      The text to be used if the number is plural.\n     * @param {string} number      The number to compare against to use either the singular or plural form.\n     * @param {string} context     Context information for the translators.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n\n\n    translation =\n    /** @type {string} */\n\n    /** @type {*} */\n    hooks.applyFilters('i18n.ngettext_with_context', translation, single, plural, number, context, domain);\n    return (\n      /** @type {string} */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.ngettext_with_context_' + getFilterDomain(domain), translation, single, plural, number, context, domain)\n    );\n  };\n  /** @type {IsRtl} */\n\n\n  const isRTL = () => {\n    return 'rtl' === _x('ltr', 'text direction');\n  };\n  /** @type {HasTranslation} */\n\n\n  const hasTranslation = (single, context, domain) => {\n    var _tannin$data, _tannin$data2;\n\n    const key = context ? context + '\\u0004' + single : single;\n    let result = !!((_tannin$data = tannin.data) !== null && _tannin$data !== void 0 && (_tannin$data2 = _tannin$data[domain !== null && domain !== void 0 ? domain : 'default']) !== null && _tannin$data2 !== void 0 && _tannin$data2[key]);\n\n    if (hooks) {\n      /**\n       * Filters the presence of a translation in the locale data.\n       *\n       * @param {boolean} hasTranslation Whether the translation is present or not..\n       * @param {string}  single         The singular form of the translated text (used as key in locale data)\n       * @param {string}  context        Context information for the translators.\n       * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.\n       */\n      result =\n      /** @type { boolean } */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.has_translation', result, single, context, domain);\n      result =\n      /** @type { boolean } */\n\n      /** @type {*} */\n      hooks.applyFilters('i18n.has_translation_' + getFilterDomain(domain), result, single, context, domain);\n    }\n\n    return result;\n  };\n\n  if (initialData) {\n    setLocaleData(initialData, initialDomain);\n  }\n\n  if (hooks) {\n    /**\n     * @param {string} hookName\n     */\n    const onHookAddedOrRemoved = hookName => {\n      if (I18N_HOOK_REGEXP.test(hookName)) {\n        notifyListeners();\n      }\n    };\n\n    hooks.addAction('hookAdded', 'core/i18n', onHookAddedOrRemoved);\n    hooks.addAction('hookRemoved', 'core/i18n', onHookAddedOrRemoved);\n  }\n\n  return {\n    getLocaleData,\n    setLocaleData,\n    addLocaleData,\n    resetLocaleData,\n    subscribe,\n    __,\n    _x,\n    _n,\n    _nx,\n    isRTL,\n    hasTranslation\n  };\n};\n//# sourceMappingURL=create-i18n.js.map","/**\n * Internal dependencies\n */\nimport { createI18n } from './create-i18n';\n/**\n * WordPress dependencies\n */\n\nimport { defaultHooks } from '@wordpress/hooks';\nconst i18n = createI18n(undefined, undefined, defaultHooks);\n/**\n * Default, singleton instance of `I18n`.\n */\n\nexport default i18n;\n/*\n * Comments in this file are duplicated from ./i18n due to\n * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722\n */\n\n/**\n * @typedef {import('./create-i18n').LocaleData} LocaleData\n * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback\n * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback\n */\n\n/**\n * Returns locale data by domain in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {string} [domain] Domain for which to get the data.\n * @return {LocaleData} Locale data.\n */\n\nexport const getLocaleData = i18n.getLocaleData.bind(i18n);\n/**\n * Merges locale data into the Tannin instance by domain. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\n\nexport const setLocaleData = i18n.setLocaleData.bind(i18n);\n/**\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\n\nexport const resetLocaleData = i18n.resetLocaleData.bind(i18n);\n/**\n * Subscribes to changes of locale data\n *\n * @param {SubscribeCallback} callback Subscription callback\n * @return {UnsubscribeCallback} Unsubscribe callback\n */\n\nexport const subscribe = i18n.subscribe.bind(i18n);\n/**\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n *\n * @param {string} text     Text to translate.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated text.\n */\n\nexport const __ = i18n.__.bind(i18n);\n/**\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n *\n * @param {string} text     Text to translate.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated context string without pipe.\n */\n\nexport const _x = i18n._x.bind(i18n);\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\n\nexport const _n = i18n._n.bind(i18n);\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\n\nexport const _nx = i18n._nx.bind(i18n);\n/**\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n *\n * @return {boolean} Whether locale is RTL.\n */\n\nexport const isRTL = i18n.isRTL.bind(i18n);\n/**\n * Check if there is a translation for a given string (in singular form).\n *\n * @param {string} single    Singular form of the string to look up.\n * @param {string} [context] Context information for the translators.\n * @param {string} [domain]  Domain to retrieve the translated text.\n * @return {boolean} Whether the translation exists or not.\n */\n\nexport const hasTranslation = i18n.hasTranslation.bind(i18n);\n//# sourceMappingURL=default-i18n.js.map","/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport sprintfjs from 'sprintf-js';\n/**\n * Log to console, once per message; or more precisely, per referentially equal\n * argument set. Because Jed throws errors, we log these to the console instead\n * to avoid crashing the application.\n *\n * @param {...*} args Arguments to pass to `console.error`\n */\n\nconst logErrorOnce = memoize(console.error); // eslint-disable-line no-console\n\n/**\n * Returns a formatted string. If an error occurs in applying the format, the\n * original format string is returned.\n *\n * @param {string} format The format of the string to generate.\n * @param {...*}   args   Arguments to apply to the format.\n *\n * @see https://www.npmjs.com/package/sprintf-js\n *\n * @return {string} The formatted string.\n */\n\nexport function sprintf(format) {\n  try {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return sprintfjs.sprintf(format, ...args);\n  } catch (error) {\n    if (error instanceof Error) {\n      logErrorOnce('sprintf error: \\n\\n' + error.toString());\n    }\n\n    return format;\n  }\n}\n//# sourceMappingURL=sprintf.js.map","import { __, _x, _n, sprintf } from \"@wordpress/i18n\";\nlet currentYear = new Date().getFullYear();\n//const { __, _x, _n, sprintf } = wp.i18n;\n/*\nDatenstruktur:\n0 {monat: \"3\", jahr: \"2020\", hits: \"222475\", files: \"188973\", hosts: \"2112\", …}\n...\n*/\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\nconsole.log(linechartDataset);\n  if (linechartDataset === undefined){\n    console.log(\"Data could not be retrieved\");\n    console.log(linechartDataset);\n  } else {\n    console.log(\"else\");\n    console.log(linechartDataset);\n  let filterData = (dataset, year) => {\n    let output = dataset.filter(data => {\n      return data.jahr === year.toString();\n    });\n    return output;\n  }\n\n  let outputThirdYear = filterData(linechartDataset, currentYear);\n  let outputSecondYear = filterData(linechartDataset, currentYear-1);\n  let outputFirstYear = filterData(linechartDataset, currentYear-2);\n\n  let generateDatasets = (dataset) => {\n    let datasetDummy = [null, null, null, null, null, null, null, null, null, null, null, null];\n    let datasetOutput = datasetDummy;\n    dataset.forEach(data => {\n      datasetOutput[parseInt(data.monat)-1] = parseInt(data.visits);\n    });\n    return datasetOutput;\n  }\n\n  let datasetFirstYear = generateDatasets(outputFirstYear);\n  let datasetSecondYear = generateDatasets(outputSecondYear);\n  let datasetThirdYear = generateDatasets(outputThirdYear);\n  \nHighcharts.chart('container', {\n    chart: {\n      type: 'areaspline'\n    },\n    title: {\n      text: 'Seitenbesucher der letzten 24 Monate'\n    },\n    legend: {\n      layout: 'vertical',\n      align: 'left',\n      verticalAlign: 'top',\n      x: 150,\n      y: 100,\n      floating: true,\n      borderWidth: 1,\n      backgroundColor:\n        Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\n    },\n    xAxis: {\n      categories: [\n        __('Jan', 'rrze-statistik'),\n        __('Feb', 'rrze-statistik'),\n        __('März', 'rrze-statistik'),\n        __('April', 'rrze-statistik'),\n        __('Mai', 'rrze-statistik'),\n        __('Juni', 'rrze-statistik'),\n        __('Juli', 'rrze-statistik'),\n        __('Aug', 'rrze-statistik'),\n        __('Sep', 'rrze-statistik'),\n        __('Okt', 'rrze-statistik'),\n        __('Nov', 'rrze-statistik'),\n        __('Dez', 'rrze-statistik'),      \n      ],\n    },\n    yAxis: {\n      title: {\n        text: __('Besucher', 'rrze-statistik')\n      }\n    },\n    tooltip: {\n      shared: true,\n      valueSuffix: __(' Besucher/Monat', 'rrze-statistik')\n    },\n    credits: {\n      enabled: false\n    },\n    plotOptions: {\n      areaspline: {\n        fillOpacity: 0.3\n      }\n    },\n    series: [\n      {\n      name: (currentYear-2).toString(),\n      data: datasetFirstYear\n    },\n      {\n      name: (currentYear-1).toString(),\n      data: datasetSecondYear\n    },\n             {\n      name: currentYear,\n      data: datasetThirdYear\n    }, \n            ]\n  });\n  };\n  \n});\n","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {Function} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {F & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize( fn, options ) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized( /* ...args */ ) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs, i;\n\n\t\tsearchCache: while ( node ) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif ( node.args.length !== arguments.length ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( node.args[ i ] !== arguments[ i ] ) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== head ) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif ( node === tail ) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ ( node.prev ).next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ ( head ).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply( null, args ),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( head ) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif ( size === /** @type {MemizeOptions} */ ( options ).maxSize ) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ ( tail ).prev;\n\t\t\t/** @type {MemizeCacheNode} */ ( tail ).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function() {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\tif ( process.env.NODE_ENV === 'test' ) {\n\t\t// Cache is not exposed in the public API, but used in tests to ensure\n\t\t// expected list progression\n\t\tmemoized.getCache = function() {\n\t\t\treturn [ head, tail, size ];\n\t\t};\n\t}\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nmodule.exports = memize;\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","import pluralForms from '@tannin/plural-forms';\n\n/**\n * Tannin constructor options.\n *\n * @typedef {Object} TanninOptions\n *\n * @property {string}   [contextDelimiter] Joiner in string lookup with context.\n * @property {Function} [onMissingKey]     Callback to invoke when key missing.\n */\n\n/**\n * Domain metadata.\n *\n * @typedef {Object} TanninDomainMetadata\n *\n * @property {string}            [domain]       Domain name.\n * @property {string}            [lang]         Language code.\n * @property {(string|Function)} [plural_forms] Plural forms expression or\n *                                              function evaluator.\n */\n\n/**\n * Domain translation pair respectively representing the singular and plural\n * translation.\n *\n * @typedef {[string,string]} TanninTranslation\n */\n\n/**\n * Locale data domain. The key is used as reference for lookup, the value an\n * array of two string entries respectively representing the singular and plural\n * translation.\n *\n * @typedef {{[key:string]:TanninDomainMetadata|TanninTranslation,'':TanninDomainMetadata|TanninTranslation}} TanninLocaleDomain\n */\n\n/**\n * Jed-formatted locale data.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @typedef {{[domain:string]:TanninLocaleDomain}} TanninLocaleData\n */\n\n/**\n * Default Tannin constructor options.\n *\n * @type {TanninOptions}\n */\nvar DEFAULT_OPTIONS = {\n\tcontextDelimiter: '\\u0004',\n\tonMissingKey: null,\n};\n\n/**\n * Given a specific locale data's config `plural_forms` value, returns the\n * expression.\n *\n * @example\n *\n * ```\n * getPluralExpression( 'nplurals=2; plural=(n != 1);' ) === '(n != 1)'\n * ```\n *\n * @param {string} pf Locale data plural forms.\n *\n * @return {string} Plural forms expression.\n */\nfunction getPluralExpression( pf ) {\n\tvar parts, i, part;\n\n\tparts = pf.split( ';' );\n\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tpart = parts[ i ].trim();\n\t\tif ( part.indexOf( 'plural=' ) === 0 ) {\n\t\t\treturn part.substr( 7 );\n\t\t}\n\t}\n}\n\n/**\n * Tannin constructor.\n *\n * @class\n *\n * @param {TanninLocaleData} data      Jed-formatted locale data.\n * @param {TanninOptions}    [options] Tannin options.\n */\nexport default function Tannin( data, options ) {\n\tvar key;\n\n\t/**\n\t * Jed-formatted locale data.\n\t *\n\t * @name Tannin#data\n\t * @type {TanninLocaleData}\n\t */\n\tthis.data = data;\n\n\t/**\n\t * Plural forms function cache, keyed by plural forms string.\n\t *\n\t * @name Tannin#pluralForms\n\t * @type {Object<string,Function>}\n\t */\n\tthis.pluralForms = {};\n\n\t/**\n\t * Effective options for instance, including defaults.\n\t *\n\t * @name Tannin#options\n\t * @type {TanninOptions}\n\t */\n\tthis.options = {};\n\n\tfor ( key in DEFAULT_OPTIONS ) {\n\t\tthis.options[ key ] = options !== undefined && key in options\n\t\t\t? options[ key ]\n\t\t\t: DEFAULT_OPTIONS[ key ];\n\t}\n}\n\n/**\n * Returns the plural form index for the given domain and value.\n *\n * @param {string} domain Domain on which to calculate plural form.\n * @param {number} n      Value for which plural form is to be calculated.\n *\n * @return {number} Plural form index.\n */\nTannin.prototype.getPluralForm = function( domain, n ) {\n\tvar getPluralForm = this.pluralForms[ domain ],\n\t\tconfig, plural, pf;\n\n\tif ( ! getPluralForm ) {\n\t\tconfig = this.data[ domain ][ '' ];\n\n\t\tpf = (\n\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t// @ts-ignore\n\t\t\tconfig.plural_forms\n\t\t);\n\n\t\tif ( typeof pf !== 'function' ) {\n\t\t\tplural = getPluralExpression(\n\t\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t\t// @ts-ignore\n\t\t\t\tconfig.plural_forms\n\t\t\t);\n\n\t\t\tpf = pluralForms( plural );\n\t\t}\n\n\t\tgetPluralForm = this.pluralForms[ domain ] = pf;\n\t}\n\n\treturn getPluralForm( n );\n};\n\n/**\n * Translate a string.\n *\n * @param {string}      domain   Translation domain.\n * @param {string|void} context  Context distinguishing terms of the same name.\n * @param {string}      singular Primary key for translation lookup.\n * @param {string=}     plural   Fallback value used for non-zero plural\n *                               form index.\n * @param {number=}     n        Value to use in calculating plural form.\n *\n * @return {string} Translated string.\n */\nTannin.prototype.dcnpgettext = function( domain, context, singular, plural, n ) {\n\tvar index, key, entry;\n\n\tif ( n === undefined ) {\n\t\t// Default to singular.\n\t\tindex = 0;\n\t} else {\n\t\t// Find index by evaluating plural form for value.\n\t\tindex = this.getPluralForm( domain, n );\n\t}\n\n\tkey = singular;\n\n\t// If provided, context is prepended to key with delimiter.\n\tif ( context ) {\n\t\tkey = context + this.options.contextDelimiter + singular;\n\t}\n\n\tentry = this.data[ domain ][ key ];\n\n\t// Verify not only that entry exists, but that the intended index is within\n\t// range and non-empty.\n\tif ( entry && entry[ index ] ) {\n\t\treturn entry[ index ];\n\t}\n\n\tif ( this.options.onMissingKey ) {\n\t\tthis.options.onMissingKey( singular, domain );\n\t}\n\n\t// If entry not found, fall back to singular vs. plural with zero index\n\t// representing the singular value.\n\treturn index === 0 ? singular : plural;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["compile","expression","terms","variables","OPERATORS","a","b","c","evaluate","postfix","i","j","args","getOperatorResult","term","value","stack","length","Array","pop","apply","earlyReturn","hasOwnProperty","push","pluralForms","n","PRECEDENCE","OPENERS","TERMINATORS","PATTERN","match","operator","element","substr","index","trim","indexOf","concat","reverse","hooks","storeKey","hookName","namespace","callback","priority","arguments","undefined","hooksStore","console","error","handler","handlers","splice","__current","forEach","hookInfo","name","currentIndex","runs","doAction","_hooksStore$__current","_hooksStore$__current2","some","hook","_Hooks","constructor","this","actions","Object","create","filters","addAction","addFilter","removeAction","removeFilter","hasAction","hasFilter","removeAllActions","removeAllFilters","applyFilters","currentAction","currentFilter","doingAction","doingFilter","didAction","didFilter","removeAll","handlersRemoved","returnFirstArg","_len","_key","result","defaultHooks","test","DEFAULT_LOCALE_DATA","plural_forms","I18N_HOOK_REGEXP","createI18n","initialData","initialDomain","tannin","listeners","Set","notifyListeners","listener","doSetLocaleData","data","_tannin$data$domain","domain","setLocaleData","dcnpgettext","context","single","plural","number","getFilterDomain","_x","text","translation","onHookAddedOrRemoved","getLocaleData","addLocaleData","_tannin$data$domain2","resetLocaleData","subscribe","add","delete","__","_n","_nx","isRTL","hasTranslation","_tannin$data","_tannin$data2","key","i18n","bind","currentYear","Date","getFullYear","document","addEventListener","event","log","linechartDataset","filterData","dataset","year","filter","jahr","toString","outputThirdYear","outputSecondYear","generateDatasets","datasetOutput","parseInt","monat","visits","datasetFirstYear","datasetSecondYear","datasetThirdYear","Highcharts","chart","type","title","legend","layout","align","verticalAlign","x","y","floating","borderWidth","backgroundColor","defaultOptions","xAxis","categories","yAxis","tooltip","shared","valueSuffix","credits","enabled","plotOptions","areaspline","fillOpacity","series","module","exports","fn","options","head","tail","size","memoized","node","len","searchCache","next","prev","val","maxSize","clear","re","not_string","not_bool","not_type","not_primitive","numeric_arg","json","not_json","modulo","placeholder","key_access","index_access","sign","sprintf","sprintf_format","sprintf_parse","vsprintf","fmt","argv","parse_tree","arg","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","output","keys","Error","param_no","Function","isNaN","TypeError","String","fromCharCode","JSON","stringify","width","precision","parseFloat","toExponential","toFixed","Number","toPrecision","substring","prototype","call","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","repeat","sprintf_cache","_fmt","arg_names","exec","SyntaxError","field_list","replacement_field","field_match","window","DEFAULT_OPTIONS","contextDelimiter","onMissingKey","Tannin","getPluralForm","config","pf","parts","part","split","getPluralExpression","singular","entry","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop"],"sourceRoot":""}